[
  {
    "id": 1744092341,
    "question_id": 1046,
    "lang": "java",
    "lang_name": "Java",
    "time": "2 hours, 29 minutes",
    "timestamp": 1755849498,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "3 ms",
    "url": "/submissions/detail/1744092341/",
    "is_pending": "Not Pending",
    "title": "Max Consecutive Ones III",
    "memory": "52.9 MB",
    "code": "class Solution {\n    public int longestOnes(int[] nums, int k) {\n        int l = 0 ,r = 0, maxLen = 0, zeroes = 0, len = nums.length;\n\n        while(r<len){\n                if(nums[r]==0){\n                    zeroes++;\n                }\n                if(zeroes>k){\n                    if(nums[l]==0){\n                        zeroes--;\n                    }\n                        l++;\n                    \n                   \n                }\n                else if(zeroes<=k){\n                    maxLen = Math.max(maxLen,r-l+1);\n                }\n               \n            r++;\n\n        }\n        return maxLen;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "max-consecutive-ones-iii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 395
  },
  {
    "id": 1741994575,
    "question_id": 3,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 day, 22 hours",
    "timestamp": 1755691087,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "6 ms",
    "url": "/submissions/detail/1741994575/",
    "is_pending": "Not Pending",
    "title": "Longest Substring Without Repeating Characters",
    "memory": "44.5 MB",
    "code": "class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        int l = 0, r = 0, maxLen = 0, len = s.length();\n        Map<Character, Integer> map = new HashMap();\n\n        for (r = 0; r < len; r++) {\n            Character c = s.charAt(r);\n            if (!map.containsKey(c)) {\n                map.put(c, r);\n               \n            }\n            else {\n                if (l <= map.get(c)) {\n                   // maxLen = Math.max(maxLen, r - l);\n                    l = map.get(c) + 1;\n                    map.put(c, r);\n                } else {\n                    map.put(c, r);\n                }\n               \n            }\n              maxLen = Math.max(maxLen, r - l+1);\n        }\n        if(map.size()==len)\n        return len;\n        return maxLen;\n    }\n}",
    "compare_result
    "title_slug": "longest-substring-without-repeating-characters",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 394
  },
  {
    "id": 1740361104,
    "question_id": 1538,
    "lang": "java",
    "lang_name": "Java",
    "time": "3 days, 6 hours",
    "timestamp": 1755577315,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "3 ms",
    "url": "/submissions/detail/1740361104/",
    "is_pending": "Not Pending",
    "title": "Maximum Points You Can Obtain from Cards",
    "memory": "55.4 MB",
    "code": "class Solution {\n    public int maxScore(int[] cardPoints, int k) {\n        \n        int lSum = 0, rSum = 0, maxSum = 0, n = cardPoints.length;\n        for(int i = 0;i < k; i++){\n            lSum += cardPoints[i];\n        }\n            maxSum = lSum;\n        for(int i = k-1 ;i>=0;i--){\n            lSum -= cardPoints[i];\n            rSum += cardPoints[n-1];\n            maxSum = Math.max(maxSum,lSum+rSum);\n            n--;\n        }\n\n            return maxSum;\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111",
    "title_slug": "maximum-points-you-can-obtain-from-cards",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 388
  },
  {
    "id": 1685344938,
    "question_id": 142,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 month, 2 weeks",
    "timestamp": 1751564969,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1685344938/",
    "is_pending": "Not Pending",
    "title": "Linked List Cycle II",
    "memory": "44.6 MB",
    "code": "/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode detectCycle(ListNode head) {\n        \nListNode fast = head;\nListNode slow = head;\n\nwhile(fast != null && fast.next != null){\n    slow = slow.next;\n    fast = fast.next.next;\n    if(slow == fast){\n        ListNode flag = head;\n        while(flag != slow){\n            flag = flag.next;\n            slow = slow.next;\n        }\n        return flag;\n    }\n}\n\nreturn null;\n    }\n}\n\n\n /*ListNode slow = head;\n        ListNode fast = head;\n        while(fast != null && fast.next != null){\n            slow = slow.next;\n            fast = fast.next.next;\n            if(slow == fast){\n                ListNode  start = head;\n                while(start != slow){\n                    start = start.next;\n                    slow = slow.next;\n                }\n                return start;\n\n            }\n        }\n        return null;\n        */",
    "compare_result": "111111111111111111",
    "title_slug": "linked-list-cycle-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 384
  },
  {
    "id": 1652944042,
    "question_id": 234,
    "lang": "java",
    "lang_name": "Java",
    "time": "2 months, 2 weeks",
    "timestamp": 1748971512,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/1652944042/",
    "is_pending": "Not Pending",
    "title": "Palindrome Linked List",
    "memory": "68.5 MB",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public boolean isPalindrome(ListNode head) {\n        ListNode slow = head;\n        ListNode fast = head;\n        while(fast!=null && fast.next!=null){\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n         ListNode secondHalf = reverseList(slow);\n         ListNode firstHalf = head;\n        ListNode tempSecond = secondHalf;\n        while (tempSecond != null) {\n            if (firstHalf.val != tempSecond.val) {\n                return false;\n            }\n            firstHalf = firstHalf.next;\n            tempSecond = tempSecond.next;\n        }\n\n        return true;\n    }\n\n    private ListNode reverseList(ListNode head) {\n        ListNode prev = null;\n        while (head != null) {\n            ListNode nextTemp = head.next;\n            head.next = prev;\n            prev = head;\n            head = nextTemp;\n        }\n        return prev;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "palindrome-linked-list",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 381
  },
  {
    "id": 1651962333,
    "question_id": 142,
    "lang": "java",
    "lang_name": "Java",
    "time": "2 months, 2 weeks",
    "timestamp": 1748886616,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1651962333/",
    "is_pending": "Not Pending",
    "title": "Linked List Cycle II",
    "memory": "44.6 MB",
    "code": "/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode detectCycle(ListNode head) {\n        ListNode slow = head;\n        ListNode fast = head;\n        while(fast != null && fast.next != null){\n            slow = slow.next;\n            fast = fast.next.next;\n            if(slow == fast){\n                ListNode  start = head;\n                while(start != slow){\n                    start = start.next;\n                    slow = slow.next;\n                }\n                return start;\n\n            }\n        }\n        return null;\n    }\n}",
    "compare_result": "111111111111111111",
    "title_slug": "linked-list-cycle-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 380
  },
  {
    "id": 1651934209,
    "question_id": 141,
    "lang": "java",
    "lang_name": "Java",
    "time": "2 months, 2 weeks",
    "timestamp": 1748885096,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1651934209/",
    "is_pending": "Not Pending",
    "title": "Linked List Cycle",
    "memory": "44.5 MB",
    "code": "/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n\n        ListNode slow = head;\n        ListNode fast = head;\n\n        while (fast != null && fast.next != null) {\n             slow = slow.next;\n            fast = fast.next.next;\n            if (slow == fast)\n                return true;\n\n           \n        }\n\n        return false;\n\n        // ListNode node = head;\n        // List<ListNode> list = new ArrayList();\n        // while(node != null){\n        //     if(list.contains(node)){\n        //         return true;\n        //     }\n        //     else{\n        //         list.add(node);\n        //     }\n        //      node = node.next;\n        // }\n        // return false;\n    }\n}",
    "compare_result": "11111111111111111111111111111",
    "title_slug": "linked-list-cycle",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 378
  },
  {
    "id": 1651921863,
    "question_id": 141,
    "lang": "java",
    "lang_name": "Java",
    "time": "2 months, 2 weeks",
    "timestamp": 1748884425,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "469 ms",
    "url": "/submissions/detail/1651921863/",
    "is_pending": "Not Pending",
    "title": "Linked List Cycle",
    "memory": "43.9 MB",
    "code": "/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        ListNode node = head;\n        List<ListNode> list = new ArrayList();\n        while(node != null){\n            if(list.contains(node)){\n                return true;\n            }\n            else{\n                list.add(node);\n            }\n             node = node.next;\n        }\n        return false;\n    }\n}",
    "compare_result": "11111111111111111111111111111",
    "title_slug": "linked-list-cycle",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 377
  },
  {
    "id": 1600879418,
    "question_id": 129,
    "lang": "java",
    "lang_name": "Java",
    "time": "4 months, 2 weeks",
    "timestamp": 1744133642,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1600879418/",
    "is_pending": "Not Pending",
    "title": "Sum Root to Leaf Numbers",
    "memory": "41.2 MB",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumNumbers(TreeNode root) {\n        return dfs(root,0);\n    }\n\n    int dfs(TreeNode node,int currSum){\n        if(node == null)\n        return 0;\n\n        currSum = currSum*10 + node.val;\n\n        if(node.left == null & node.right == null){\n            return currSum;\n        }\n\n        return dfs(node.left,currSum ) + dfs(node.right,currSum);\n\n\n\n    } \n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "sum-root-to-leaf-numbers",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 374
  },
  {
    "id": 1577629037,
    "question_id": 101,
    "lang": "java",
    "lang_name": "Java",
    "time": "5 months, 1 week",
    "timestamp": 1742280106,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1577629037/",
    "is_pending": "Not Pending",
    "title": "Symmetric Tree",
    "memory": "41.8 MB",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n * int val;\n * TreeNode left;\n * TreeNode right;\n * TreeNode() {}\n * TreeNode(int val) { this.val = val; }\n * TreeNode(int val, TreeNode left, TreeNode right) {\n * this.val = val;\n * this.left = left;\n * this.right = right;\n * }\n * }\n */\nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n\n        if (root == null)\n            return true;\n        return symmetry(root.left, root.right);\n\n    }\n\n    private boolean symmetry(TreeNode left, TreeNode right) {\n        if (left == null && right == null)\n            return true;\n        if (left == null || right == null || left.val != right.val)\n            return false;\n        return symmetry(left.left, right.right) && symmetry(left.right, right.left);\n    }\n}\n",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "symmetric-tree",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 373
  },
  {
    "id": 1576668782,
    "question_id": 226,
    "lang": "java",
    "lang_name": "Java",
    "time": "5 months, 1 week",
    "timestamp": 1742209133,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1576668782/",
    "is_pending": "Not Pending",
    "title": "Invert Binary Tree",
    "memory": "41.6 MB",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode invertTree(TreeNode root) {\n\nif (root == null) {\n            return null;\n        }\n\n        TreeNode temp = root.left;\n        root.left = root.right;\n        root.right = temp;\n        invertTree(root.left);\n        invertTree(root.right);\n\n        return root;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "invert-binary-tree",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 372
  },
  {
    "id": 1576647614,
    "question_id": 100,
    "lang": "java",
    "lang_name": "Java",
    "time": "5 months, 1 week",
    "timestamp": 1742207460,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1576647614/",
    "is_pending": "Not Pending",
    "title": "Same Tree",
    "memory": "41 MB",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSameTree(TreeNode p, TreeNode q) {\n        if(p==null && q == null)\n        return  true;\n        else if(p==null  || q == null || p.val != q.val)\n        return false;\n        return isSameTree(p.left,q.left) && isSameTree(p.right,q.right);\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "same-tree",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 370
  },
  {
    "id": 1576646341,
    "question_id": 100,
    "lang": "java",
    "lang_name": "Java",
    "time": "5 months, 1 week",
    "timestamp": 1742207355,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1576646341/",
    "is_pending": "Not Pending",
    "title": "Same Tree",
    "memory": "41 MB",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSameTree(TreeNode p, TreeNode q) {\n        if(p==null && q == null)\n        return  true;\n        else if(p==null  || q == null)\n        return false;\n        return (p.val == q.val && \n        isSameTree(p.left,q.left) &&\n        isSameTree(p.right,q.right));\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "same-tree",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 369
  },
  {
    "id": 1573452578,
    "question_id": 104,
    "lang": "java",
    "lang_name": "Java",
    "time": "5 months, 1 week",
    "timestamp": 1741952536,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1573452578/",
    "is_pending": "Not Pending",
    "title": "Maximum Depth of Binary Tree",
    "memory": "43.1 MB",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxDepth(TreeNode root) {\n        if(root == null)\n        return 0;\n        int height_twrds_lft = maxDepth(root.left);\n        int height_twrds_rght = maxDepth(root.right);\n\n        return Math.max(height_twrds_lft,height_twrds_rght) + 1;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111",
    "title_slug": "maximum-depth-of-binary-tree",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 368
  },
  {
    "id": 1548381017,
    "question_id": 3709,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months",
    "timestamp": 1739958454,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1548381017/",
    "is_pending": "Not Pending",
    "title": "Find Special Substring of Length K",
    "memory": "42.6 MB",
    "code": "class Solution {\n    public boolean hasSpecialSubstring(String s, int k) {\n        int len = s.length();\n        if (len == 1)\n            return true;\n        int count = 1;\n        for (int i = 0; i < len - 1; i++) {\n            if (s.charAt(i) == s.charAt(i + 1)) {\n                count++;\n            } else if ((s.charAt(i) != s.charAt(i + 1))) {\n                if (count == k)\n                    return true;\n                else\n                count = 1;    \n            } \n            if(i==(len-2)  && count==k){\n                return true;\n            }\n        }\n        return false;\n    }\n}",
    "compare_result
    "title_slug": "find-special-substring-of-length-k",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 367
  },
  {
    "id": 1548072391,
    "question_id": 1966,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months",
    "timestamp": 1739936894,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "30 ms",
    "url": "/submissions/detail/1548072391/",
    "is_pending": "Not Pending",
    "title": "Frequency of the Most Frequent Element",
    "memory": "58.3 MB",
    "code": "import java.util.Arrays;\n\nclass Solution {\n    public int maxFrequency(int[] nums, int k) {\n        Arrays.sort(nums);\n        int low = 0,maxFreq = 1;\n        long ops = 0;\n        for (int high = 1; high < nums.length; high++) {\n            ops += ((long)nums[high] - (long)nums[high - 1]) * (high - low);\n            while (ops > k) {\n                ops -= (long)nums[high] - (long)nums[low];\n                low++;\n            }\n            maxFreq = Math.max(maxFreq, high - low + 1);\n        }\n        return Math.min(maxFreq, nums.length);\n    }\n}\n",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "frequency-of-the-most-frequent-element",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 363
  },
  {
    "id": 1547357450,
    "question_id": 125,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months",
    "timestamp": 1739881609,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "17 ms",
    "url": "/submissions/detail/1547357450/",
    "is_pending": "Not Pending",
    "title": "Valid Palindrome",
    "memory": "50.5 MB",
    "code": "class Solution {\n    public boolean isPalindrome(String flag) {\n        String s = flag.replaceAll(\"[^a-zA-Z0-9]\", \"\").toLowerCase();\n        return isPal(0,s);\n    }\n    boolean isPal(int i ,String s){\n            if (i>=s.length()/2)\n            return true;\n        if (s.charAt(i) != s.charAt(s.length() -i- 1))\n            return false;\n        else\n            return isPal(i+1,s);\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "valid-palindrome",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 359
  },
  {
    "id": 1547340930,
    "question_id": 125,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months",
    "timestamp": 1739880192,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "13 ms",
    "url": "/submissions/detail/1547340930/",
    "is_pending": "Not Pending",
    "title": "Valid Palindrome",
    "memory": "45.5 MB",
    "code": "class Solution {\n    public boolean isPalindrome(String s) {\n        String flag = s.replaceAll(\"[^a-zA-Z0-9]\", \"\").toLowerCase();\n        int len = flag.length();\n        for(int i =0 ;i<len/2;i++){\n            if(flag.charAt(i)!=flag.charAt(len-i-1))\n            return false;\n        }\n        return true;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "valid-palindrome",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 357
  },
  {
    "id": 1546423384,
    "question_id": 1013,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months",
    "timestamp": 1739810346,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "10 ms",
    "url": "/submissions/detail/1546423384/",
    "is_pending": "Not Pending",
    "title": "Fibonacci Number",
    "memory": "40.6 MB",
    "code": "class Solution {\n    public int fib(int n) {\n        if(n==0) return 0;\n        if(n==1) return 1;\n        int res = fib(n-1) + fib(n-2);\n        return res;\n    }\n}",
    "compare_result": "1111111111111111111111111111111",
    "title_slug": "fibonacci-number",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 356
  },
  {
    "id": 1546406106,
    "question_id": 7,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months",
    "timestamp": 1739809490,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1546406106/",
    "is_pending": "Not Pending",
    "title": "Reverse Integer",
    "memory": "40.9 MB",
    "code": "class Solution {\n    public int reverse(int x) {\n      //  int neg = x<0 ? -1 : 1;  \n     // var temp = Math.abs(x);\n     long temp = x;\n      long res= 0;\n      while(temp!=0){\n        long flag = temp %10;\n        // if(res > (Integer.MAX_VALUE - flag) / 10)\n        // return 0;\n        res = res*10 + flag;\n        temp /= 10;\n      }\n    //  System.out.println(\"Res for X \" + res + \" \" + x);\n    //     if(res< Integer.MAX_VALUE && res>= Integer.MIN_VALUE){\n    //     return res*neg;\n    //   }\n        if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE)\n        return 0;\n        return (int)res;\n    }\n}",
    "compare_result
    "title_slug": "reverse-integer",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 355
  },
  {
    "id": 1546397323,
    "question_id": 7,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months",
    "timestamp": 1739809041,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1546397323/",
    "is_pending": "Not Pending",
    "title": "Reverse Integer",
    "memory": "41.2 MB",
    "code": "class Solution {\n    public int reverse(int x) {\n        int neg = x<0 ? -1 : 1;  \n      var temp = Math.abs(x);\n      var res= 0;\n      while(temp>0){\n        var flag = temp %10;\n        if(res > (Integer.MAX_VALUE - flag) / 10)\n        return 0;\n        res = res*10 + flag;\n        temp /= 10;\n      }\n    //  System.out.println(\"Res for X \" + res + \" \" + x);\n    //     if(res< Integer.MAX_VALUE && res>= Integer.MIN_VALUE){\n    //     return res*neg;\n    //   }\n        return res*neg;\n    }\n}",
    "compare_result
    "title_slug": "reverse-integer",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 354
  },
  {
    "id": 1539640072,
    "question_id": 134,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months, 1 week",
    "timestamp": 1739298819,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/1539640072/",
    "is_pending": "Not Pending",
    "title": "Gas Station",
    "memory": "56.1 MB",
    "code": "class Solution {\n    public int canCompleteCircuit(int[] gas, int[] cost) {\n        int sGas = 0, sCost = 0, total = 0, res = 0;\n        for (int i = 0; i < gas.length; i++) {\n            sGas += gas[i];\n            sCost += cost[i];\n        }\n        if (sGas < sCost)\n            return -1;\n\n        for (int i = 0; i < gas.length; i++) {\n            total += gas[i] - cost[i];\n            if (total < 0) {\n                total = 0;\n                res = i + 1;\n            }\n        }\n        return res;\n    }\n\n}",
    "compare_result": "111111111111111111111111111111111111111",
    "title_slug": "gas-station",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 352
  },
  {
    "id": 1538451201,
    "question_id": 24,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months, 1 week",
    "timestamp": 1739212719,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1538451201/",
    "is_pending": "Not Pending",
    "title": "Swap Nodes in Pairs",
    "memory": "41.9 MB",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n * int val;\n * ListNode next;\n * ListNode() {}\n * ListNode(int val) { this.val = val; }\n * ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode swapPairs(ListNode head) {\n        if (head == null || head.next == null) {\n            return head;\n        }\n\n        ListNode dummy = new ListNode(0);\n        dummy.next = head;\n        ListNode prev = dummy;\n\n        while (head != null && head.next != null) {\n            ListNode first = head;\n            ListNode second = head.next;\n\n            first.next = second.next;\n            second.next = first;\n            prev.next = second;\n\n            prev = first;\n            head = first.next;\n        }\n        return dummy.next;\n    }\n}\n",
    "compare_result": "1111111111111111111111111111111111111111111111111111111",
    "title_slug": "swap-nodes-in-pairs",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 350
  },
  {
    "id": 1532692349,
    "question_id": 42,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months, 2 weeks",
    "timestamp": 1738779018,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1532692349/",
    "is_pending": "Not Pending",
    "title": "Trapping Rain Water",
    "memory": "45.9 MB",
    "code": "class Solution {\n    public int trap(int[] height) {\n       int len = height.length;\n       int [] left = new int[len];\n       int [] right = new int[len];\n       int prevMax = height[0];\n       int water = 0;\n       for(int i = 0; i<len;i++){\n            left[i] = Math.max(prevMax,height[i]);\n            if(height[i]>prevMax)\n            prevMax = height[i];\n       }\n\n       prevMax = height[len-1];\n       for(int i = len-1;i>=0;i--){\n        right[i]=Math.max(prevMax,height[i]);\n       if(height[i]>prevMax)\n            prevMax = height[i];\n       }\n\n       for(int i= 0;i<len;i++){\n        int min = Math.min(left[i],right[i]);\n        water += min-height[i];\n       }\n       return water;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "trapping-rain-water",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 347
  },
  {
    "id": 1523990018,
    "question_id": 15,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months, 3 weeks",
    "timestamp": 1738128196,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "834 ms",
    "url": "/submissions/detail/1523990018/",
    "is_pending": "Not Pending",
    "title": "3Sum",
    "memory": "52.5 MB",
    "code": "class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        int len = nums.length;\n        \n        Set<List<Integer>> resultSet = new HashSet<>();\n        Arrays.sort(nums);\n         for (int i = 0; i < len; i++) {\n            int target = -nums[i];\n            int low = i+1, high = len - 1;\n            while(low<high){\n               int sum = nums[low]+nums[high];\n                if(sum==target){\n                    resultSet.add(Arrays.asList(nums[i],nums[low],nums[high]));\n                    low++;\n                    high--;\n                }\n                else if(sum>target)\n                high--;\n                else\n                low++;\n            }\n        }\n        List<List<Integer>> resultList = new ArrayList<>(resultSet);\n        return resultList;\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "3sum",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 346
  },
  {
    "id": 1523447120,
    "question_id": 274,
    "lang": "java",
    "lang_name": "Java",
    "time": "6 months, 3 weeks",
    "timestamp": 1738081896,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/1523447120/",
    "is_pending": "Not Pending",
    "title": "H-Index",
    "memory": "41.7 MB",
    "code": "class Solution {\n    public int hIndex(int[] nums) {\n        Arrays.sort(nums);\n        int len=nums.length;\n        int res=1;\n        for(int i= len-1;i>=0;i--){\n           \n            if(nums[i]>=res)\n             res++;\n             else break;\n        }\n        return res-1;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "h-index",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 345
  },
  {
    "id": 1470415792,
    "question_id": 1,
    "lang": "java",
    "lang_name": "Java",
    "time": "8 months, 2 weeks",
    "timestamp": 1733337820,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/1470415792/",
    "is_pending": "Not Pending",
    "title": "Two Sum",
    "memory": "45.7 MB",
    "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        Map<Integer,Integer> map = new HashMap<>();\n        int len = nums.length;\n        int low = 0,high = len-1;\n        for(int i = 0;i<len;i++){\n            int num = target-nums[i];\n            if(map.containsKey(num))\n            return new int[] {map.get(num),i};\n            else\n            map.put(nums[i],i);\n        }\n        return new int[0];\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "two-sum",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 341
  },
  {
    "id": 1470088859,
    "question_id": 15,
    "lang": "java",
    "lang_name": "Java",
    "time": "8 months, 2 weeks",
    "timestamp": 1733311225,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "869 ms",
    "url": "/submissions/detail/1470088859/",
    "is_pending": "Not Pending",
    "title": "3Sum",
    "memory": "52.3 MB",
    "code": "class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        int len = nums.length;\n        \n        Set<List<Integer>> resultSet = new HashSet<>();\n        Arrays.sort(nums);\n         for (int i = 0; i < len; i++) {\n            int target = -nums[i];\n            int low = i+1, high = len - 1;\n            while(low<high){\n               int sum = nums[low]+nums[high];\n                if(sum==target){\n                    resultSet.add(Arrays.asList(nums[i],nums[low],nums[high]));\n                    low++;\n                    high--;\n                }\n                else if(sum>target)\n                high--;\n                else\n                low++;\n            }\n        }\n        List<List<Integer>> resultList = new ArrayList<>(resultSet);\n        return resultList;\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "3sum",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 340
  },
  {
    "id": 1469939481,
    "question_id": 167,
    "lang": "java",
    "lang_name": "Java",
    "time": "8 months, 3 weeks",
    "timestamp": 1733296463,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/1469939481/",
    "is_pending": "Not Pending",
    "title": "Two Sum II - Input Array Is Sorted",
    "memory": "47.3 MB",
    "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        int len = nums.length;\n        int res[] = new int[2];\n        int low = 0,high = len-1;\n        for(int i=0;i<len;i++){\n            if(nums[low]+nums[high]==target){\n                res[0] = low+1;\n                res[1] = high+1;\n                break;\n            }\n            else if(nums[low]+nums[high] > target){\n               //the sum is greater than the target so updating high value to lower one as array is sorted\n                high--;\n            }\n            else{\n                 //the sum is lesser than the target so updating low value to highr one as array is sorted\n                low++;\n            }\n        }\n        return res;\n    }\n}",
    "compare_result": "111111111111111111111111",
    "title_slug": "two-sum-ii-input-array-is-sorted",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 339
  },
  {
    "id": 1469938634,
    "question_id": 167,
    "lang": "java",
    "lang_name": "Java",
    "time": "8 months, 3 weeks",
    "timestamp": 1733296388,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/1469938634/",
    "is_pending": "Not Pending",
    "title": "Two Sum II - Input Array Is Sorted",
    "memory": "48.4 MB",
    "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        int len = nums.length;\n        int res[] = new int[2];\n        int low = 0,high = len-1;\n        for(int i=0;i<len;i++){\n            if(nums[low]+nums[high]==target){\n                res[0] = low+1;\n                res[1] = high+1;\n                break;\n            }\n            else if(nums[low]+nums[high] > target){\n                //Target lies in left part\n                high--;\n            }\n            else{\n                low++;\n            }\n        }\n        return res;\n    }\n}",
    "compare_result": "111111111111111111111111",
    "title_slug": "two-sum-ii-input-array-is-sorted",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 338
  },
  {
    "id": 1469513187,
    "question_id": 73,
    "lang": "java",
    "lang_name": "Java",
    "time": "8 months, 3 weeks",
    "timestamp": 1733250640,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/1469513187/",
    "is_pending": "Not Pending",
    "title": "Set Matrix Zeroes",
    "memory": "46 MB",
    "code": "class Solution {\n    public void setZeroes(int[][] matrix) {\n        \n        int n = matrix.length;\n        int m = matrix[0].length;\n        Set<Integer> xList = new HashSet<>();\n        Set<Integer> yList = new HashSet<>();\n        for(int i = 0;i < n;i++){\n            for(int j = 0;j<m;j++){\n                if(matrix[i][j]==0){\n                    xList.add(i);\n                    yList.add(j);\n                }\n            }\n        }\n\n         for(int i = 0;i < n;i++){\n            for(int j = 0;j<m;j++){\n                if(xList.contains(i) || yList.contains(j)){\n                    matrix[i][j]=0;\n                }\n            }\n         }\n\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "set-matrix-zeroes",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 337
  },
  {
    "id": 1469487979,
    "question_id": 121,
    "lang": "java",
    "lang_name": "Java",
    "time": "8 months, 3 weeks",
    "timestamp": 1733248883,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/1469487979/",
    "is_pending": "Not Pending",
    "title": "Best Time to Buy and Sell Stock",
    "memory": "61.8 MB",
    "code": "class Solution {\n    public int maxProfit(int[] prices) {\n        // int min=99999;\n        // int max=-1;\n        // int minPos=-1;\n        // int maxPos=-1;\n        // for(int i=0;i<prices.length;i++){\n        //     if(prices[i]<min){\n        //         min=prices[i];\n        //         minPos=i;\n        //     }\n        //    if(prices[i]>max){\n        //        if(i>minPos){\n        //            max=prices[i];\n        //            maxPos=i;\n        //        }\n        //    }\n        // }\n        // if(maxPos>minPos){\n        // return max-min;\n        // }\n        // else{\n        //     return 0;\n        // }\n\n        int maxProfit=0;\n        int cheapestPrice=prices[0];\n        for(int i=1;i<prices.length;i++){\n            if(prices[i]-cheapestPrice>maxProfit){\n                maxProfit=prices[i]-cheapestPrice;\n            }\n           if(cheapestPrice>prices[i]){\n                cheapestPrice=prices[i];\n            }\n        }\n        return maxProfit;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "best-time-to-buy-and-sell-stock",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 336
  },
  {
    "id": 1463945492,
    "question_id": 104,
    "lang": "java",
    "lang_name": "Java",
    "time": "8 months, 4 weeks",
    "timestamp": 1732686377,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1463945492/",
    "is_pending": "Not Pending",
    "title": "Maximum Depth of Binary Tree",
    "memory": "43 MB",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxDepth(TreeNode root) {\n\n        if(root==null){\n            return 0;\n        }\n\n        int leftHeight = maxDepth(root.left);\n        int rightHeight = maxDepth(root.right);\n\n        return 1+Math.max(leftHeight,rightHeight);\n        \n    }\n}",
    "compare_result": "111111111111111111111111111111111111111",
    "title_slug": "maximum-depth-of-binary-tree",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 335
  },
  {
    "id": 1426081311,
    "question_id": 80,
    "lang": "java",
    "lang_name": "Java",
    "time": "10 months, 1 week",
    "timestamp": 1729229070,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1426081311/",
    "is_pending": "Not Pending",
    "title": "Remove Duplicates from Sorted Array II",
    "memory": "44.2 MB",
    "code": "\nclass Solution {\n    public int removeDuplicates(int[] nums) {\n        int i = 2;\n        for (int j=2;j<nums.length;j++){\n            if(nums[j]!=nums[i-2]){\n            nums[i]=nums[j];\n            i++;\n            }\n        }\n        return i;\n    }\n}\n",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "remove-duplicates-from-sorted-array-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 333
  },
  {
    "id": 1426068546,
    "question_id": 88,
    "lang": "java",
    "lang_name": "Java",
    "time": "10 months, 1 week",
    "timestamp": 1729228071,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1426068546/",
    "is_pending": "Not Pending",
    "title": "Merge Sorted Array",
    "memory": "42.1 MB",
    "code": "class Solution {\n    public void merge(int[] nums1, int m, int[] nums2, int n) {\n        \n        for(int i=m;i<(m+n);i++){\n            nums1[i] = nums2[i-m];\n        }\n        Arrays.sort(nums1);\n        \n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111",
    "title_slug": "merge-sorted-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 332
  },
  {
    "id": 1408116335,
    "question_id": 287,
    "lang": "java",
    "lang_name": "Java",
    "time": "10 months, 3 weeks",
    "timestamp": 1727780675,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/1408116335/",
    "is_pending": "Not Pending",
    "title": "Find the Duplicate Number",
    "memory": "58 MB",
    "code": "class Solution {\n    public int findDuplicate(int[] nums) {\n           int slow = nums[0];\n           int fast = nums[0];\n           do{\n            slow = nums[slow];\n            fast = nums[nums[fast]];\n           }while(slow!=fast);\n           slow = nums[0];\n           while(slow!=fast){\n            slow = nums[slow];\n            fast = nums[fast];\n           }\n           return slow;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111",
    "title_slug": "find-the-duplicate-number",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 327
  },
  {
    "id": 1402826442,
    "question_id": 240,
    "lang": "java",
    "lang_name": "Java",
    "time": "10 months, 4 weeks",
    "timestamp": 1727348543,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "7 ms",
    "url": "/submissions/detail/1402826442/",
    "is_pending": "Not Pending",
    "title": "Search a 2D Matrix II",
    "memory": "45.7 MB",
    "code": "class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        int m = matrix.length;\n        int n = matrix[0].length;\n        for(int i=0;i<m;i++){\n        int arr[]=matrix[i];\n        int low=0;\n        int high = arr.length-1;\n        while(low<=high){\n            int mid = low + (high-low)/2;\n            if(arr[mid]==target)\n            return true;\n            else if(arr[mid]>target){\n                high = mid-1;\n            }\n            else {\n                low = mid+1;\n            }\n        }\n        }\n                return false;\n\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "search-a-2d-matrix-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 323
  },
  {
    "id": 1402801795,
    "question_id": 81,
    "lang": "java",
    "lang_name": "Java",
    "time": "11 months",
    "timestamp": 1727346386,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/1402801795/",
    "is_pending": "Not Pending",
    "title": "Search in Rotated Sorted Array II",
    "memory": "42.7 MB",
    "code": "class Solution {\n    public boolean search(int[] nums, int target) {\n        Arrays.sort(nums);\n        int low = 0;\n        int high = nums.length-1;\n        while(low<=high){\n            int mid = low+(high-low)/2;\n            if(nums[mid]==target)\n            return true;\n            else if(nums[mid]>target)\n            high = mid-1;\n            else\n            low=mid+1;\n        }\n        return false;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "search-in-rotated-sorted-array-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 322
  },
  {
    "id": 1402796499,
    "question_id": 74,
    "lang": "java",
    "lang_name": "Java",
    "time": "11 months",
    "timestamp": 1727345928,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "16 ms",
    "url": "/submissions/detail/1402796499/",
    "is_pending": "Not Pending",
    "title": "Search a 2D Matrix",
    "memory": "42.9 MB",
    "code": "class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        \n        int m = matrix.length;\n        int n = matrix[0].length;\n        for(int i=0;i<m;i++){\n            int arr[] = new int [n];\n             arr = matrix[i];\n            int low=0;\n            int high=arr.length-1;\n            while(low<=high){\n                int mid = low+(high-low)/2;\n                System.out.println( \"Mid : \"+mid +  \" low : \" + low + \"high : \"+high);\n                if(arr[mid]==target)\n                return true;\n                else if(arr[mid]>target){\n                    high= mid-1;\n                }\n                else{\n                    low = mid +1;\n                }\n            }\n        }\n        return false;\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "search-a-2d-matrix",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 321
  },
  {
    "id": 1402777773,
    "question_id": 34,
    "lang": "java",
    "lang_name": "Java",
    "time": "11 months",
    "timestamp": 1727344351,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1402777773/",
    "is_pending": "Not Pending",
    "title": "Find First and Last Position of Element in Sorted Array",
    "memory": "46.1 MB",
    "code": "class Solution {\n    public int[] searchRange(int[] nums, int target) {\n\n        int[] res = { -1, -1 };\n        int len = nums.length;\n        int low = 0, high = len - 1;\n        int left = leftBinarySearch(low,high,nums,target);\n        int right = rightBinarySearch(low,high,nums,target);\n        res[0]=left;\n        res[1]=right;\n        return res;\n\n    }\n\n    public int leftBinarySearch (int low, int high, int[] nums, int target){\n        int left=-1;\n        while(low<=high){\n            int mid = low+(high-low)/2;\n            if(nums[mid]==target){\n                    high = mid-1;\n                    left = mid;\n            }\n            else if(nums[mid]>target){\n                high = mid-1;\n            }\n            else{\n                low = mid+1;\n            }\n        }\n        return left;\n    }\n\n    public int rightBinarySearch (int low, int high, int[] nums, int target){\n        int right=-1;\n        while(low<=high){\n            int mid = low+(high-low)/2;\n            if(nums[mid]==target){\n                    low = mid+1;\n                    right = mid;\n            }\n            else if(nums[mid]>target){\n                high = mid-1;\n            }\n            else{\n                low = mid+1;\n            }\n        }\n        return right;\n    }\n\n\n\n    public int[] binarySearch(int low, int high, int[] nums, int target) {\n        int[] res = { -1, -1 };\n        int len = nums.length;\n        int left = -1;\n        int right = -1;\n        while (low <= high) {\n            int mid = low + (high - low) / 2;\n            if (nums[mid] == target) {\n                if (mid > 0 && nums[mid - 1] == target) {\n                    high = mid - 1;\n                    right = mid;\n                    left = mid - 1;\n                    if(low<=high)\n                    return binarySearch(low, high, nums, target);\n                }\n                if (mid < len - 1 && nums[mid + 1] == target) {\n                    low = mid + 1;\n                    right = mid + 1;\n                    left = mid;\n                    if(low<=high)\n                    return binarySearch(low, high, nums, target);\n                } else {\n                    res[0] = mid;\n                    res[1] = mid;\n                    return res;\n                }\n            } else if (nums[mid] > target) {\n                high = mid - 1;\n            } else\n                low = mid + 1;\n        }\n        res[0] = left;\n        res[1] = right;\n        return res;\n    }\n}\n",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "find-first-and-last-position-of-element-in-sorted-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 319
  },
  {
    "id": 1386753329,
    "question_id": 3,
    "lang": "java",
    "lang_name": "Java",
    "time": "11 months, 2 weeks",
    "timestamp": 1726072329,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "12 ms",
    "url": "/submissions/detail/1386753329/",
    "is_pending": "Not Pending",
    "title": "Longest Substring Without Repeating Characters",
    "memory": "45.4 MB",
    "code": "class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        int len = s.length();\n        String str = \"\";\n        String res = \"\";\n        for (int i = 0; i < len; i++) {\n            char c = s.charAt(i);\n          \n          \n             if (str.indexOf(c) != -1) {\n               \n                int index = str.indexOf(c);\n                str = str.substring(index + 1);\n            } \n             str += c;\n            \n            if (str.length() > res.length())\n                res = str;\n        }\n          return res.length();\n    }\n}",
    "compare_result
    "title_slug": "longest-substring-without-repeating-characters",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 315
  },
  {
    "id": 1386750708,
    "question_id": 3,
    "lang": "java",
    "lang_name": "Java",
    "time": "11 months, 2 weeks",
    "timestamp": 1726072183,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "12 ms",
    "url": "/submissions/detail/1386750708/",
    "is_pending": "Not Pending",
    "title": "Longest Substring Without Repeating Characters",
    "memory": "45.7 MB",
    "code": "class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        int len = s.length();\n        String str = \"\";\n        String res = \"\";\n        for (int i = 0; i < len; i++) {\n            char c = s.charAt(i);\n            if (str.isEmpty()) {\n                str += c;\n            } else if (str.indexOf(c) != -1) {\n                str += s.charAt(i);\n                int index = str.indexOf(c);\n                str = str.substring(index + 1);\n            } else {\n                str += s.charAt(i);\n            }\n            if (str.length() > res.length())\n                res = str;\n        }\n          return res.length();\n    }\n}",
    "compare_result
    "title_slug": "longest-substring-without-repeating-characters",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 314
  },
  {
    "id": 1384124030,
    "question_id": 33,
    "lang": "java",
    "lang_name": "Java",
    "time": "11 months, 2 weeks",
    "timestamp": 1725877211,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1384124030/",
    "is_pending": "Not Pending",
    "title": "Search in Rotated Sorted Array",
    "memory": "41.9 MB",
    "code": "class Solution {\n    public int search(int[] nums, int target) {\n        int low = 0;\n        int high = nums.length - 1;\n\n        while (low <= high) {\n            int mid = low + (high - low) / 2;\n\n            if (nums[mid] == target)\n                return mid;\n\n            // Check if the left side is sorted\n            if (nums[low] <= nums[mid]) {\n                if (target >= nums[low] && target < nums[mid]) {\n                    high = mid - 1;\n                } else {\n                    low = mid + 1;\n                }\n            }\n            // Else the right side must be sorted\n            else {\n                if (target > nums[mid] && target <= nums[high]) {\n                    low = mid + 1;\n                } else {\n                    high = mid - 1;\n                }\n            }\n        }\n\n        return -1;\n    }\n}\n",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "search-in-rotated-sorted-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 309
  },
  {
    "id": 1383430107,
    "question_id": 153,
    "lang": "java",
    "lang_name": "Java",
    "time": "11 months, 2 weeks",
    "timestamp": 1725814943,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1383430107/",
    "is_pending": "Not Pending",
    "title": "Find Minimum in Rotated Sorted Array",
    "memory": "41.7 MB",
    "code": "class Solution {\n    public int findMin(int[] nums) {\n        int low = 0;\n        int high = nums.length - 1;\n        int mid = low + (high - low) / 2;\n        if (nums[low] < nums[high])\n            return nums[low];\n        while (low < high) {\n            mid = low + (high - low) / 2;\n            if (nums[mid] > nums[mid + 1])\n                return nums[mid + 1];\n            else if (nums[mid] < nums[mid - 1])\n                return nums[mid];\n\n            if (nums[mid] > nums[high]) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return nums[low];\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "find-minimum-in-rotated-sorted-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 308
  },
  {
    "id": 1382945114,
    "question_id": 162,
    "lang": "java",
    "lang_name": "Java",
    "time": "11 months, 2 weeks",
    "timestamp": 1725779421,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1382945114/",
    "is_pending": "Not Pending",
    "title": "Find Peak Element",
    "memory": "41.7 MB",
    "code": "class Solution {\n    public int findPeakElement(int[] nums) {\n        int left = 0;\n        int right = nums.length - 1;\n\n        while (left < right) {\n            int mid = left + (right - left) / 2;\n\n            if (nums[mid] < nums[mid + 1]) {\n                left = mid + 1;\n            }\n          \n            else {\n                right = mid;\n            }\n        }\n\n     \n        return left;\n    }\n}\n",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "find-peak-element",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 306
  },
  {
    "id": 1364576124,
    "question_id": 202,
    "lang": "java",
    "lang_name": "Java",
    "time": "12 months",
    "timestamp": 1724327596,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1364576124/",
    "is_pending": "Not Pending",
    "title": "Happy Number",
    "memory": "40.9 MB",
    "code": "import java.util.HashSet;\nimport java.util.Set;\n\nclass Solution {\n    public boolean isHappy(int n) {\n        Set<Integer> seenNumbers = new HashSet<>();\n        int num = n;\n\n        while (num != 1 && !seenNumbers.contains(num)) {\n            seenNumbers.add(num);\n            num = calculateSum(num);\n        }\n\n        if(num==1)\n        return true;\n        else return false;\n    }\n\n    public int calculateSum(int num) {\n        int sum = 0;\n        while (num > 0) {\n            int temp = num % 10;\n            sum += temp * temp;\n            num /= 10;\n        }\n        return sum;\n    }\n}\n",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "happy-number",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 301
  },
  {
    "id": 1364571793,
    "question_id": 202,
    "lang": "java",
    "lang_name": "Java",
    "time": "12 months",
    "timestamp": 1724327240,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "3 ms",
    "url": "/submissions/detail/1364571793/",
    "is_pending": "Not Pending",
    "title": "Happy Number",
    "memory": "40.8 MB",
    "code": "class Solution {\n    public boolean isHappy(int n) {\n        int num = n;\n    int res  = calculateSum(num);\n    System.out.println(res);\n       if(res == 1)\n       return true;\n       return false;\n        \n    }\n\n    public int calculateSum(int num){\n    int sum = 0;\n    int size = 0;\n        while(num>0){\n            int temp = num % 10;\n            sum += temp*temp;\n            num /= 10;\n            size++;\n        }\n\n\n\n        if(sum >= 10){\n           return calculateSum(sum);\n        }\n        if(sum == 7)\n        return 1;\n\n        else return sum;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "happy-number",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 300
  },
  {
    "id": 1311209428,
    "question_id": 1039,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 1 month",
    "timestamp": 1720248279,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "23 ms",
    "url": "/submissions/detail/1311209428/",
    "is_pending": "Not Pending",
    "title": "Find the Town Judge",
    "memory": "51.3 MB",
    "code": "class Solution {\n    public int findJudge(int n, int[][] trustt) {\n        \n        Map<Integer,Integer> mp=new HashMap();\n        if(n==1)\n        return 1;\n        for(int i=0;i<trustt.length;i++){\n            if(mp.containsKey(trustt[i][1])){\n                mp.put(trustt[i][1],mp.get(trustt[i][1])+1);\n            }\n            else{\n                mp.put(trustt[i][1],1);\n            }\n           // if(mp.containsKey(trustt[i][0]))\n            mp.put(trustt[i][0],-10000);\n        }\n\n        for(Map.Entry<Integer,Integer> entry : mp.entrySet()){\n            if(entry.getValue()>=n-1){\n                return entry.getKey();\n            }\n\n        }\n        return -1;\n\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "find-the-town-judge",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 298
  },
  {
    "id": 1258640647,
    "question_id": 209,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 3 months",
    "timestamp": 1715771481,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1258640647/",
    "is_pending": "Not Pending",
    "title": "Minimum Size Subarray Sum",
    "memory": "57.6 MB",
    "code": "class Solution {\n    public int minSubArrayLen(int target, int[] nums) {     \n            int left=0,right=0,sum=0, min=nums.length+1,flag=0;\n            // while(right<nums.length){\n            //     sum+=nums[right];\n            //     while(sum>=target){                   \n            //         min=Math.min(999999,right-left+1);\n            //         sum-=nums[left];\n            //         left++; \n            //     }\n            //     right++;\n            // }\n             for (int end = 0; end < nums.length; end++) {\n            sum += nums[end];\n            while (sum >= target) {\n                min = Math.min(min, end - left + 1);\n                sum -= nums[left];\n                left++;\n            }\n        }\n            return min==nums.length+1?0:min;\n    }\n}",
    "compare_result": "111111111111111111111",
    "title_slug": "minimum-size-subarray-sum",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 295
  },
  {
    "id": 1208388644,
    "question_id": 380,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1710869590,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "123 ms",
    "url": "/submissions/detail/1208388644/",
    "is_pending": "Not Pending",
    "title": "Insert Delete GetRandom O(1)",
    "memory": "95.2 MB",
    "code": "class RandomizedSet {\n\nSet<Integer> set = new HashSet<Integer> ();\n    public RandomizedSet() {\n        Set<Integer> set = new HashSet<Integer> ();\n    }\n    \n    public boolean insert(int val) {\n        if(set.contains(val))\n        return false;\n        set.add(val);\n        return true;\n    }\n    \n    public boolean remove(int val) {\n        if(!set.contains(val))\n        return false;\n        set.remove(val);\n        return true;\n    }\n    \n    public int getRandom() {\n\n Integer[] arrayNumbers = set.toArray(new Integer[set.size()]); \n  \n        // generate a random number \n        Random rndm = new Random(); \n  \n        // this will generate a random number between 0 and \n        // HashSet.size - 1 \n        int rndmNumber = rndm.nextInt(set.size()); \n  \n        // // get the element at random number index \n        // System.out.println(\"Random element: \"\n        //                    + arrayNumbers[rndmNumber]); \n\n\n        return arrayNumbers[rndmNumber];\n    }\n}\n\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * RandomizedSet obj = new RandomizedSet();\n * boolean param_1 = obj.insert(val);\n * boolean param_2 = obj.remove(val);\n * int param_3 = obj.getRandom();\n */",
    "compare_result": "1111111111111111111",
    "title_slug": "insert-delete-getrandom-o1",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 289
  },
  {
    "id": 1206610119,
    "question_id": 1509,
    "lang": "mysql",
    "lang_name": "MySQL",
    "time": "1 year, 5 months",
    "timestamp": 1710703841,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2434 ms",
    "url": "/submissions/detail/1206610119/",
    "is_pending": "Not Pending",
    "title": "Replace Employee ID With The Unique Identifier",
    "memory": "0.0B",
    "code": "# Write your MySQL query statement below\nselect eu.unique_id as unique_id, e.name as name from Employees e left join EmployeeUNI eu on e.id=eu.id;",
    "compare_result": "1111111111111111111111111",
    "title_slug": "replace-employee-id-with-the-unique-identifier",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 287
  },
  {
    "id": 1206603217,
    "question_id": 219,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1710703222,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "17 ms",
    "url": "/submissions/detail/1206603217/",
    "is_pending": "Not Pending",
    "title": "Contains Duplicate II",
    "memory": "57.6 MB",
    "code": "class Solution {\n    public boolean containsNearbyDuplicate(int[] nums, int k) {\n        \n        int len= nums.length;\n        Map<Integer,Integer> map = new HashMap<>();\n        for(int i=0;i<len;i++){\n            if(map.containsKey(nums[i])){\n                if(Math.abs(map.get(nums[i])-i)<=k)\n                return true;\n                else\n                map.put(nums[i],i);\n            }\n            else{\n                map.put(nums[i],i);\n            }\n        }\n     return false;\n\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111",
    "title_slug": "contains-duplicate-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 286
  },
  {
    "id": 1206570370,
    "question_id": 290,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1710700542,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1206570370/",
    "is_pending": "Not Pending",
    "title": "Word Pattern",
    "memory": "41.6 MB",
    "code": "class Solution {\n    public boolean wordPattern(String pattern, String s) {\n        String [] array = s.split(\" \",0);\n        Map<Character,String> map = new HashMap<>();\n         Map<String,Character> map1 = new HashMap<>();\n        if(pattern.length()!=array.length)\n        return false;\n\n        for(int i=0;i<pattern.length();i++){\n\n                if(map.containsKey(pattern.charAt(i))){\n                    if(!map.get(pattern.charAt(i)).equals(array[i]))\n                    return false;\n                }\n\n                else { \n                    map.put(pattern.charAt(i),array[i]);\n                }\n\n        }\n\n        for(int i=0;i<pattern.length();i++){\n\n                if(map1.containsKey(array[i])){\n                    if(!map1.get(array[i]).equals(pattern.charAt(i)))\n                    return false;\n                }\n\n                else { \n                    map1.put(array[i],pattern.charAt(i));\n                }\n\n        }\n\n        return true;\n\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111",
    "title_slug": "word-pattern",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 284
  },
  {
    "id": 1206561243,
    "question_id": 205,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1710699880,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "15 ms",
    "url": "/submissions/detail/1206561243/",
    "is_pending": "Not Pending",
    "title": "Isomorphic Strings",
    "memory": "42.4 MB",
    "code": "class Solution {\n    public boolean isIsomorphic(String s, String t) {\n\n\n            int length =  s.length();\n            Map<Character,Character> map=new HashMap<>();\n            Map<Character,Character> map1=new HashMap<>();\n\n            for(int i=0;i<length;i++){\n                if(map.containsKey(s.charAt(i))){\n                    if(!map.get(s.charAt(i)).equals(t.charAt(i)))\n                    return false;\n                }\n                else{\n                    map.put(s.charAt(i),t.charAt(i));\n                }\n            }\n\n            for(int i=0;i<length;i++){\n                if(map1.containsKey(t.charAt(i))){\n                    if(!map1.get(t.charAt(i)).equals(s.charAt(i)))\n                    return false;\n                }\n                else{\n                    map1.put(t.charAt(i),s.charAt(i));\n                }\n            }\n            return true;\n\n\n\n\n\n\n\n\n\n\n\n\n        // char[] chS = s.toCharArray();\n        // Arrays.sort(chS);\n        // char[] chT = t.toCharArray();\n        // Arrays.sort(chT);\n        // int countS=chS.length;\n        // int distinctS=1;\n        // int distinctT=1;\n        // for(int i=1;i<countS;i++){\n        //     if(chS[i]!=chS[i-1])\n        //     distinctS++;\n        //     if(chT[i]!=chT[i-1])\n        //     distinctT++;\n        // }\n        // if(distinctS==distinctT)\n        // return true;\n        // else\n        // return false;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111",
    "title_slug": "isomorphic-strings",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 281
  },
  {
    "id": 1199858266,
    "question_id": 1258,
    "lang": "mysql",
    "lang_name": "MySQL",
    "time": "1 year, 5 months",
    "timestamp": 1710096124,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1026 ms",
    "url": "/submissions/detail/1199858266/",
    "is_pending": "Not Pending",
    "title": "Article Views I",
    "memory": "0.0B",
    "code": "# Write your MySQL query statement below\nselect distinct(author_id) as id from Views where author_id=viewer_id order by author_id;",
    "compare_result": "1111111111111",
    "title_slug": "article-views-i",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 277
  },
  {
    "id": 1198711140,
    "question_id": 584,
    "lang": "mysql",
    "lang_name": "MySQL",
    "time": "1 year, 5 months",
    "timestamp": 1710003257,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "777 ms",
    "url": "/submissions/detail/1198711140/",
    "is_pending": "Not Pending",
    "title": "Find Customer Referee",
    "memory": "0.0B",
    "code": "# Write your MySQL query statement below\nselect name from Customer where referee_id != 2 or referee_id is null;",
    "compare_result": "1111111111111111111",
    "title_slug": "find-customer-referee",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 276
  },
  {
    "id": 1197819757,
    "question_id": 1258,
    "lang": "mysql",
    "lang_name": "MySQL",
    "time": "1 year, 5 months",
    "timestamp": 1709918821,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1391 ms",
    "url": "/submissions/detail/1197819757/",
    "is_pending": "Not Pending",
    "title": "Article Views I",
    "memory": "0.0B",
    "code": "# Write your MySQL query statement below\nselect distinct(author_id) as id from Views where author_id=viewer_id order by author_id;",
    "compare_result": "1111111111111",
    "title_slug": "article-views-i",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 275
  },
  {
    "id": 1196636208,
    "question_id": 238,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709810178,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/1196636208/",
    "is_pending": "Not Pending",
    "title": "Product of Array Except Self",
    "memory": "53.4 MB",
    "code": "class Solution {\n    public int[] productExceptSelf(int[] nums) {\n        int len=nums.length;\n        int[] res=new int[len];\n        int prod=1;\n        int isZero=0;\n        for(int i=0;i<len;i++){\n            if(nums[i]!=0)\n            prod*=nums[i];\n            else\n            isZero++;\n        }\n        for(int i=0;i<len;i++){\n            if(isZero>1)\n            res[i]=0;\n            else if(isZero>0 && nums[i]!=0)\n            res[i]=0;\n            else if(isZero>0 && nums[i]==0)\n            res[i]=prod;\n            else\n            res[i]=prod/nums[i];\n        }\n        return res;\n    }\n}",
    "compare_result": "1111111111111111111111",
    "title_slug": "product-of-array-except-self",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 269
  },
  {
    "id": 1196561241,
    "question_id": 392,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709802780,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "5 ms",
    "url": "/submissions/detail/1196561241/",
    "is_pending": "Not Pending",
    "title": "Is Subsequence",
    "memory": "41.3 MB",
    "code": "class Solution {\n    public boolean isSubsequence(String s, String t) {\n        int relPos=-1;\n        boolean flag=false;\n        if(s.length()==0)\n        return true;\n       for(int i=0;i<s.length();i++){\n           char ch = s.charAt(i);\n        //    if(!flag)\n        //    return flag;    \n            for(int j=0;j<t.length();j++){\n               // System.out.println(t.charAt(j)+\"   \"+ch);\n                if(t.charAt(j)==ch && j>relPos){\n                    relPos=j;\n                    flag=true;\n                    break;\n                }\n                else if(j==t.length()-1)\n                return false;\n                else{\n                    flag= false;\n                }\n            }\n       }\n       return flag;\n    }\n}",
    "compare_result": "11111111111111111111",
    "title_slug": "is-subsequence",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 267
  },
  {
    "id": 1196386287,
    "question_id": 14,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709788813,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "7 ms",
    "url": "/submissions/detail/1196386287/",
    "is_pending": "Not Pending",
    "title": "Longest Common Prefix",
    "memory": "42 MB",
    "code": "class Solution {\n    public String longestCommonPrefix(String[] strs) {\n        String res=\"\";\n        String temp=\"\";\n        int len=strs.length;\n        int min=500;\n        for(String s:strs){\n            if(s.length()<min){\n            min=s.length();\n            temp=s;\n            }\n        }\n        for(int i=0;i<min;i++){\n            char c=temp.charAt(i);\n            for(int j=0;j<len;j++){\n                if(strs[j].charAt(i)!=c)\n                return res;\n            }\n            res+=c;\n        }\n        return res;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "longest-common-prefix",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 263
  },
  {
    "id": 1196368516,
    "question_id": 58,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709787496,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1196368516/",
    "is_pending": "Not Pending",
    "title": "Length of Last Word",
    "memory": "42.1 MB",
    "code": "class Solution {\n    public int lengthOfLastWord(String s) {\n        String [] str =s.split(\" \",0);\n        int len=str.length;\n        return str[len-1].length();\n\n        \n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111",
    "title_slug": "length-of-last-word",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 261
  },
  {
    "id": 1196351403,
    "question_id": 15,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709786210,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "992 ms",
    "url": "/submissions/detail/1196351403/",
    "is_pending": "Not Pending",
    "title": "3Sum",
    "memory": "54.8 MB",
    "code": "class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        int len=nums.length;\n        Arrays.sort(nums);\n        List<List<Integer>> lst = new ArrayList<>();\n        if(nums[0]>0)\n        return lst;\n        Set<List<Integer>> integerSet = new HashSet<>();\n        for(int i=0;i<len;i++){\n             int left = 0;\n             int right = len-1;\n            //int[] list=new int[3];\n            int target = 0-nums[i];\n            while(left < right && left!=i && right!=i){\n                List<Integer> list = new ArrayList<>();\n                if (nums[left]+nums[right]==target) {\n                  list.add(nums[i]);\n                  list.add(nums[left]);\n                  list.add(nums[right]);\n                  Collections.sort(list);\n                  integerSet.add(list); \n                  right--;                \n                 } \n              else if (nums[left]+nums[right]<target) {\n                   left++; // Target may be in the right half\n                 } \n              else {\n                    right--; // Target may be in the left half\n                 }\n            }  \n        }\n       for(List<Integer> ls : integerSet){\n           lst.add(ls);\n       }\n          return lst;\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "3sum",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 260
  },
  {
    "id": 1194979251,
    "question_id": 49,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709664388,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "6 ms",
    "url": "/submissions/detail/1194979251/",
    "is_pending": "Not Pending",
    "title": "Group Anagrams",
    "memory": "48.1 MB",
    "code": "class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n\n\n         int len = strs.length;\n\n        // Map to store the grouped anagrams\n        Map<String, List<String>> anagramGroups = new HashMap<>();\n\n        // Sort each string and group them in the map\n        for (int i = 0; i < len; i++) {\n            char[] tempArray = strs[i].toCharArray();\n            Arrays.sort(tempArray);\n            String sortedString = new String(tempArray);\n\n            // If the sorted string is not in the map, add a new group\n            if (!anagramGroups.containsKey(sortedString)) {\n                anagramGroups.put(sortedString, new ArrayList<>());\n            }\n\n            // Add the original string to its corresponding group\n            anagramGroups.get(sortedString).add(strs[i]);\n        }\n\n        // Convert the map values to a list of lists\n        List<List<String>> result = new ArrayList<>(anagramGroups.values());\n\n        return result;\n        // int len = strs.length;\n        // String[] array = new String[len];\n        // for(int i=0;i<len;i++){\n        //     char[] tempArray = strs[i].toCharArray();\n        //     Arrays.sort(tempArray);\n        //     array[i]=tempArray;\n        // }\n        // Arrays.sort(array);\n        // for(int i=0;i<len;i++){\n        //     for(int j=i+1;j<len-1;j++){\n        //         if()\n        //     }\n        // }\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "group-anagrams",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 256
  },
  {
    "id": 1194964559,
    "question_id": 242,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709663457,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "20 ms",
    "url": "/submissions/detail/1194964559/",
    "is_pending": "Not Pending",
    "title": "Valid Anagram",
    "memory": "44.5 MB",
    "code": "class Solution {\n    public boolean isAnagram(String s, String t) {\n        Map<Character,Integer> tMap=new HashMap<>();\n        Map<Character,Integer> sMap=new HashMap<>();\n        int tLen=t.length();\n        int sLen=s.length();\n        if(sLen!=tLen)\n        return false;\n        for(int i=0;i<sLen;i++){\n            if(sMap.containsKey(s.charAt(i)))\n                sMap.put(s.charAt(i),sMap.get(s.charAt(i))+1);\n            else\n                sMap.put(s.charAt(i),1);\n        }\n\n        for(int i=0;i<tLen;i++){\n            if(sMap.containsKey(t.charAt(i)) && sMap.get(t.charAt(i))>0)\n            sMap.put(t.charAt(i),sMap.get(t.charAt(i))-1);\n            else return false;\n        }\n        return true;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111",
    "title_slug": "valid-anagram",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 255
  },
  {
    "id": 1194949667,
    "question_id": 128,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709662630,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "16 ms",
    "url": "/submissions/detail/1194949667/",
    "is_pending": "Not Pending",
    "title": "Longest Consecutive Sequence",
    "memory": "56.5 MB",
    "code": "class Solution {\n    public int longestConsecutive(int[] nums) {\n        Arrays.sort(nums);\n        int res=1;\n        int temp=0;\n        int count=1;\n        int len=nums.length;\n        if(len==0)\n        return 0;\n        for(int i=1;i<len;i++){\n            if(nums[i]==nums[i-1]+1 || nums[i]==nums[i-1]){\n                if(nums[i]==nums[i-1])\n                continue;\n                count++;\n                temp=count;\n            }\n            else{\n                if(count>res)\n                    res=count;\n                count=1;\n            }\n        }\n        if(temp>res)\n        return temp;\n        return res;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "longest-consecutive-sequence",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 252
  },
  {
    "id": 1193819885,
    "question_id": 383,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709572808,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "21 ms",
    "url": "/submissions/detail/1193819885/",
    "is_pending": "Not Pending",
    "title": "Ransom Note",
    "memory": "44.9 MB",
    "code": "import java.util.Arrays;\n\nclass Solution {\n    public boolean canConstruct(String ransomNote, String magazine) {\n        Map<Character,Integer>map=new HashMap<>();\n        for(int i=0;i<magazine.length();i++){\n            if(map.containsKey(magazine.charAt(i))){\n                map.put(magazine.charAt(i),map.get(magazine.charAt(i))+1);\n            }\n            else{\n                map.put(magazine.charAt(i),1);\n            }\n        }\n        int count=0;\n        for(int i=0;i<ransomNote.length();i++){\n            char c=ransomNote.charAt(i);\n            if(map.containsKey(c) && map.get(c)>0){\n                map.put(c,map.get(c)-1);\n                count++;\n            }\n            else{\n                break;\n            }\n        }\n        if(count==ransomNote.length())\n        return true;\n        else return false;\n    }\n}\n",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "ransom-note",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 248
  },
  {
    "id": 1191917073,
    "question_id": 58,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709406753,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1191917073/",
    "is_pending": "Not Pending",
    "title": "Length of Last Word",
    "memory": "41.8 MB",
    "code": "class Solution {\n    public int lengthOfLastWord(String s) {\n        String [] str =s.split(\" \",0);\n        int len=str.length;\n        return str[len-1].length();\n\n        \n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111",
    "title_slug": "length-of-last-word",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 243
  },
  {
    "id": 1190838677,
    "question_id": 135,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709315696,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "3 ms",
    "url": "/submissions/detail/1190838677/",
    "is_pending": "Not Pending",
    "title": "Candy",
    "memory": "45.7 MB",
    "code": "\n\n        \n    \nclass Solution {\n    public int candy(int[] ratings) {\n        int sum=0;\n        int len=ratings.length;\n        int res[]=new int[len];\n        Arrays.fill(res,1);\n        // for(int i=1;i<=len-1;i++){\n        //     if(ratings[i]>ratings[i-1]){\n        //         res[i]=res[i-1]+1;\n        //     }\n        //     if(ratings[i]==ratings[i-1]){\n        //         res[i]=res[i-1];\n        //     }\n        // }\n        // for(int i=len-2;i>=0;i--){\n        //     if(ratings[i]>ratings[i+1]){\n        //         res[i]=res[i+1]+1;\n        //     }\n        // }\n\n        for(int i=0;i<len-1;i++){\n            if(ratings[i]<ratings[i+1]){\n                res[i+1]=res[i]+1;\n            }\n        }\n\n        for(int i=len-1;i>0;i--){\n            if(ratings[i-1]>ratings[i] && res[i]>=res[i-1]){\n                res[i-1]=res[i]+1;\n            }\n        }\n        for(int a:res){\n            sum+=a;\n        }\n        return sum;\n\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111",
    "title_slug": "candy",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 241
  },
  {
    "id": 1188840176,
    "question_id": 151,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1709136098,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "14 ms",
    "url": "/submissions/detail/1188840176/",
    "is_pending": "Not Pending",
    "title": "Reverse Words in a String",
    "memory": "44.9 MB",
    "code": "class Solution {\n    public String reverseWords(String s) {\n        String[] str= s.split(\" \",s.length());\n        String res=\"\";\n        Collections.reverse(Arrays.asList(str)); \n        //return Arrays.toString(str);\n        for(int i=0;i<str.length;i++){\n            if(!str[i].trim().isEmpty())\n            res+=str[i].trim()+\" \";\n        }\n        return res.trim();\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "reverse-words-in-a-string",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 239
  },
  {
    "id": 1188006755,
    "question_id": 584,
    "lang": "mysql",
    "lang_name": "MySQL",
    "time": "1 year, 5 months",
    "timestamp": 1709059004,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "862 ms",
    "url": "/submissions/detail/1188006755/",
    "is_pending": "Not Pending",
    "title": "Find Customer Referee",
    "memory": "0.0B",
    "code": "# Write your MySQL query statement below\nselect name from Customer where referee_id != 2 or referee_id is null;",
    "compare_result": "1111111111111111111",
    "title_slug": "find-customer-referee",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 237
  },
  {
    "id": 1186035775,
    "question_id": 167,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 5 months",
    "timestamp": 1708885971,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/1186035775/",
    "is_pending": "Not Pending",
    "title": "Two Sum II - Input Array Is Sorted",
    "memory": "46.8 MB",
    "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        int len =nums.length;\n        int res1=-1;\n        int res2=-1;\n        int res[]=new int[2];\n        int temp[]=new int[len];\n        int flag=0;\n        // for(int i=0;i<len;i++){\n        //     temp[i]=target-nums[i];\n        // }\n\n\n        //Binary search\n        \n            int left = 0;\n            int right = nums.length - 1;\n            while (left <= right) {\n              //int mid = left + (right - left) / 2;\n              if (nums[left]+nums[right]==target) {\n                  res[0]=left+1;\n                  res[1]=right+1;\n                  return res;  \n                  \n                 } \n              else if (nums[left]+nums[right]<target) {\n                   left++; // Target may be in the right half\n                 } \n              else {\n                    right--; // Target may be in the left half\n                 }\n             }\n           \n        \n        // for(int i=0;i<len;i++){\n        //     int x = numbers[i];\n        //     for(int j=i+1;j<len;j++){\n        //         int y=numbers[j];\n        //         if(x+y==target){\n        //             res1=i+1;\n        //             res2=j+1;\n        //         }\n        //     }\n        // }\n        \n        // res[0]=res1+1;\n        // res[1]=res2+1;\n      return res;\n    }\n}",
    "compare_result": "11111111111111111111111",
    "title_slug": "two-sum-ii-input-array-is-sorted",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 230
  },
  {
    "id": 1184172271,
    "question_id": 1908,
    "lang": "mysql",
    "lang_name": "MySQL",
    "time": "1 year, 6 months",
    "timestamp": 1708709080,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "932 ms",
    "url": "/submissions/detail/1184172271/",
    "is_pending": "Not Pending",
    "title": "Recyclable and Low Fat Products",
    "memory": "0.0B",
    "code": "# Write your MySQL query statement below\nselect product_id from products where low_fats = \"Y\" and recyclable = \"Y\";",
    "compare_result": "1111111111111111111111",
    "title_slug": "recyclable-and-low-fat-products",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 225
  },
  {
    "id": 1182260237,
    "question_id": 125,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 6 months",
    "timestamp": 1708538804,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "17 ms",
    "url": "/submissions/detail/1182260237/",
    "is_pending": "Not Pending",
    "title": "Valid Palindrome",
    "memory": "44.9 MB",
    "code": "class Solution {\n    public boolean isPalindrome(String str) {\n       String s= str.replaceAll(\"[^a-zA-Z0-9]\", \"\").toLowerCase();\n        System.out.println(s);\n        for(int i=0;i<s.length()/2;i++){\n                if(s.charAt(i)!=s.charAt(s.length()-i-1))\n                return false;\n        }\n        return true;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "valid-palindrome",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 223
  },
  {
    "id": 1181253086,
    "question_id": 45,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 6 months",
    "timestamp": 1708453998,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "30 ms",
    "url": "/submissions/detail/1181253086/",
    "is_pending": "Not Pending",
    "title": "Jump Game II",
    "memory": "46 MB",
    "code": "import java.util.Arrays;\n\nclass Solution {\n    public int jump(int[] nums) {\n        int len = nums.length;\n        int[] res = new int[len];\n        Arrays.fill(res, Integer.MAX_VALUE - 1);\n\n        res[len - 1] = 0;\n\n        for (int i = len - 2; i >= 0; i--) {\n            int maxJump = Math.min(i + nums[i], len - 1);\n            for (int j = i + 1; j <= maxJump; j++) {\n                res[i] = Math.min(res[i], res[j] + 1);\n            }\n        }\n\n        return res[0];\n    }\n}\n",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "jump-game-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 222
  },
  {
    "id": 1180182450,
    "question_id": 135,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 6 months",
    "timestamp": 1708367928,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "3 ms",
    "url": "/submissions/detail/1180182450/",
    "is_pending": "Not Pending",
    "title": "Candy",
    "memory": "45.4 MB",
    "code": "class Solution {\n    public int candy(int[] ratings) {\n        int sum=0;\n        int len=ratings.length;\n        int res[]=new int[len];\n        Arrays.fill(res,1);\n        // for(int i=1;i<=len-1;i++){\n        //     if(ratings[i]>ratings[i-1]){\n        //         res[i]=res[i-1]+1;\n        //     }\n        //     if(ratings[i]==ratings[i-1]){\n        //         res[i]=res[i-1];\n        //     }\n        // }\n        // for(int i=len-2;i>=0;i--){\n        //     if(ratings[i]>ratings[i+1]){\n        //         res[i]=res[i+1]+1;\n        //     }\n        // }\n\n        for(int i=0;i<len-1;i++){\n            if(ratings[i]<ratings[i+1]){\n                res[i+1]=res[i]+1;\n            }\n        }\n\n        for(int i=len-1;i>0;i--){\n            if(ratings[i-1]>ratings[i] && res[i]>=res[i-1]){\n                res[i-1]=res[i]+1;\n            }\n        }\n        for(int a:res){\n            sum+=a;\n        }\n        return sum;\n\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111",
    "title_slug": "candy",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 213
  },
  {
    "id": 1178156620,
    "question_id": 13,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 6 months",
    "timestamp": 1708195454,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/1178156620/",
    "is_pending": "Not Pending",
    "title": "Roman to Integer",
    "memory": "44.8 MB",
    "code": "class Solution {\n    public int romanToInt(String s) {\n        int len = s.length();\n        int res = 0;\n\n        for (int i = len - 1; i > 0; i--) {\n            if (s.charAt(i) == 'I') {\n                res += 1;\n            } else if (s.charAt(i) == 'V') {\n                if (s.charAt(i - 1) == 'I') {\n                    res += 4;\n                    i--;\n                    if(i==0)\n                    return res;\n                } else\n                    res += 5;\n            } else if (s.charAt(i) == 'X') {\n                if (s.charAt(i - 1) == 'I') {\n                    res += 9;\n                    i--;\n                    if(i==0)\n                    return res;\n                } else\n                    res += 10;\n            } else if (s.charAt(i) == 'L') {\n                if (s.charAt(i - 1) == 'X') {\n                    res += 40;\n                    i--;\n                    if(i==0)\n                    return res;\n                } else\n                    res += 50;\n            } else if (s.charAt(i) == 'C') {\n                if (s.charAt(i - 1) == 'X') {\n                    res += 90;\n                    i--;\n                    if(i==0)\n                    return res;\n                } else\n                    res += 100;\n            } else if (s.charAt(i) == 'D') {\n                if (s.charAt(i - 1) == 'C') {\n                    res += 400;\n                    i--;\n                    if(i==0)\n                    return res;\n                } else\n                    res += 500;\n            } else if (s.charAt(i) == 'M') {\n                if (s.charAt(i - 1) == 'C') {\n                    res += 900;\n                    i--;\n                    if(i==0)\n                    return res;\n                } else\n                    res += 1000;\n            }\n        }\n\n        char c = s.charAt(0);\n        switch (c) {\n            case 'I':\n                res += 1;\n                break;\n            case 'V':\n                res += 5;\n                break;\n            case 'X':\n                res += 10;\n                break;\n            case 'L':\n                res += 50;\n                break;\n            case 'C':\n                res += 100;\n                break;\n            case 'D':\n                res += 500;\n                break;\n            case 'M':\n                res += 1000;\n                break;\n            default:\n                res += 0;\n        }\n        return res;\n    }\n}",
    "compare_result
    "title_slug": "roman-to-integer",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 207
  },
  {
    "id": 1177138592,
    "question_id": 55,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 6 months",
    "timestamp": 1708103754,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "3 ms",
    "url": "/submissions/detail/1177138592/",
    "is_pending": "Not Pending",
    "title": "Jump Game",
    "memory": "45.7 MB",
    "code": "class Solution {\n    public boolean canJump(int[] nums) {\n       int reachable = 0;\n       for(int i = 0; i < nums.length; i ++) {\n           if(i > reachable) return false;\n           reachable = Math.max(reachable, i + nums[i]);\n       } \n       return true;\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "jump-game",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 200
  },
  {
    "id": 1176317392,
    "question_id": 122,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 6 months",
    "timestamp": 1708023569,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1176317392/",
    "is_pending": "Not Pending",
    "title": "Best Time to Buy and Sell Stock II",
    "memory": "45.3 MB",
    "code": "class Solution {\n    public int maxProfit(int[] prices) {\n        int maxProfit=0;\n        int res=0;\n        int flag=0;\n        int cheapestPrice=prices[0];\n        for(int i=1;i<prices.length;i++){\n            if(prices[i]-cheapestPrice>maxProfit){\n                maxProfit=prices[i]-cheapestPrice;\n                flag=1;\n            }\n            else{\n                res+=maxProfit;\n                maxProfit=0;\n                cheapestPrice=prices[i];\n                flag=0;\n            }\n        }\n        if(flag==1){\n            res+= maxProfit;\n        }\n        return res;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "best-time-to-buy-and-sell-stock-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 199
  },
  {
    "id": 1175379990,
    "question_id": 121,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 6 months",
    "timestamp": 1707935591,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/1175379990/",
    "is_pending": "Not Pending",
    "title": "Best Time to Buy and Sell Stock",
    "memory": "62.2 MB",
    "code": "class Solution {\n    public int maxProfit(int[] prices) {\n        // int min=99999;\n        // int max=-1;\n        // int minPos=-1;\n        // int maxPos=-1;\n        // for(int i=0;i<prices.length;i++){\n        //     if(prices[i]<min){\n        //         min=prices[i];\n        //         minPos=i;\n        //     }\n        //    if(prices[i]>max){\n        //        if(i>minPos){\n        //            max=prices[i];\n        //            maxPos=i;\n        //        }\n        //    }\n        // }\n        // if(maxPos>minPos){\n        // return max-min;\n        // }\n        // else{\n        //     return 0;\n        // }\n\n        int maxProfit=0;\n        int cheapestPrice=prices[0];\n        for(int i=1;i<prices.length;i++){\n            if(prices[i]-cheapestPrice>maxProfit){\n                maxProfit=prices[i]-cheapestPrice;\n            }\n           if(cheapestPrice>prices[i]){\n                cheapestPrice=prices[i];\n            }\n        }\n        return maxProfit;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "best-time-to-buy-and-sell-stock",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 197
  },
  {
    "id": 1174366969,
    "question_id": 189,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 6 months",
    "timestamp": 1707845047,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1174366969/",
    "is_pending": "Not Pending",
    "title": "Rotate Array",
    "memory": "57.3 MB",
    "code": "// class Solution {\n//     public void rotate(int[] nums, int k) {\n//         int len=nums.length;\n//         k=k%len;\n//         while(k>0){\n//             int val=nums[len-1];\n//             for(int i=len-1;i>0;i--){\n//                     nums[i]=nums[i-1];\n//             }\n//             nums[0]=val;\n//             k--;\n//         }\n//     }\n// }\n\n\nclass Solution {\n\t public static void reverse(int nums[], int i, int j){\n        int li = i;\n        int ri = j;\n        \n        while(li < ri){\n            int temp = nums[li];\n            nums[li] = nums[ri];\n            nums[ri] = temp;\n            \n            li++;\n            ri--;\n        }\n    }\n    public void rotate(int[] nums, int k) {\n        k = k % nums.length; \n        if(k < 0){ \n            k += nums.length;\n        }\n        reverse(nums, 0, nums.length - k - 1);\n        reverse(nums, nums.length - k, nums.length - 1);\n        reverse(nums, 0, nums.length - 1);\n    }\n}\n\n",
    "compare_result": "11111111111111111111111111111111111111",
    "title_slug": "rotate-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 194
  },
  {
    "id": 1168951497,
    "question_id": 169,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 6 months",
    "timestamp": 1707324305,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "5 ms",
    "url": "/submissions/detail/1168951497/",
    "is_pending": "Not Pending",
    "title": "Majority Element",
    "memory": "50.5 MB",
    "code": "class Solution {\n    public int majorityElement(int[] nums) {\n        int len=nums.length;\n        Arrays.sort(nums);\n        int count=1;\n        int max=0;\n        int res=-100;\n        if(len<=1){\n            return nums[0];\n        }\n        else{\n            for(int i=1;i<len;i++){\n                if(nums[i]==nums[i-1]){\n                    count++;\n                     if(count>=max){\n                        max=count;\n                        res=nums[i];\n                    }\n                }\n                else{\n                   count=1;\n                }\n            }\n        }\n        return res;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111",
    "title_slug": "majority-element",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 188
  },
  {
    "id": 1163984615,
    "question_id": 80,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 6 months",
    "timestamp": 1706886146,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1163984615/",
    "is_pending": "Not Pending",
    "title": "Remove Duplicates from Sorted Array II",
    "memory": "44.6 MB",
    "code": "// class Solution {\n//     public int removeDuplicates(int[] nums) {\n//         int i=1;\n//         int count=1;\n//         for(int j=1;j<nums.length;j++){\n//             if(nums[j]==nums[j-1]){\n//                 if(count<2){\n//                 nums[i]=nums[j];\n//                 i++;\n//                 count++;\n//             }\n//             }\n//             else{\n//                 nums[i]=nums[j];\n//                 count=1;\n//                 i++;\n//             }\n//         }\n//         return i;\n//     }\n// }\nclass Solution {\n    public int removeDuplicates(int[] nums) {\n        if(nums.length <= 2) {\n            return nums.length;\n        }\n\n        int i = 2; // Start from the third element\n        for(int j = 2; j < nums.length; j++) {\n            if(nums[j] != nums[i - 2]) {\n                nums[i] = nums[j];\n                i++;\n            }\n        }\n\n        return i;\n    }\n}\n",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "remove-duplicates-from-sorted-array-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 185
  },
  {
    "id": 1163975415,
    "question_id": 80,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 6 months",
    "timestamp": 1706885387,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1163975415/",
    "is_pending": "Not Pending",
    "title": "Remove Duplicates from Sorted Array II",
    "memory": "44.3 MB",
    "code": "class Solution {\n    public int removeDuplicates(int[] nums) {\n        int i=1;\n        int count=1;\n        for(int j=1;j<nums.length;j++){\n            if(nums[j]==nums[j-1]){\n                if(count<2){\n                nums[i]=nums[j];\n                i++;\n                count++;\n            }\n            }\n            else{\n                nums[i]=nums[j];\n                count=1;\n                i++;\n            }\n        }\n        return i;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "remove-duplicates-from-sorted-array-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 184
  },
  {
    "id": 1146738032,
    "question_id": 26,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 7 months",
    "timestamp": 1705311094,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1146738032/",
    "is_pending": "Not Pending",
    "title": "Remove Duplicates from Sorted Array",
    "memory": "44.6 MB",
    "code": "class Solution {\n    public int removeDuplicates(int[] nums) {\n       int i=1;\n    \n       for(int j=1;j<nums.length;j++){\n           if(nums[j]!=nums[j-1]){\n               nums[i]=nums[j];\n               i++;\n           }\n       } \n       return i;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "remove-duplicates-from-sorted-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 183
  },
  {
    "id": 1146667519,
    "question_id": 27,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 7 months",
    "timestamp": 1705304193,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1146667519/",
    "is_pending": "Not Pending",
    "title": "Remove Element",
    "memory": "42.1 MB",
    "code": "class Solution {\n    public int removeElement(int[] nums, int val) {\n        // int count=0;\n        // int i=0;\n        // int j=0;\n        // int[] res=new int[nums.length];\n        // for(int value:nums){\n        //     if(value!=val){\n        //         res[i]=value;\n        //         i++;\n        //     }\n        // }\n        // for(int flag:res){\n        //     nums[j]=flag;\n        //     j++;\n        // }\n        // return i;\n\n        int i=0;\n        for (int j=0;j<nums.length;j++){\n            if(nums[j]!=val){\n                nums[i]=nums[j];\n                i++;\n            }\n        }\n        return i;\n\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "remove-element",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 182
  },
  {
    "id": 1146662462,
    "question_id": 27,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 7 months",
    "timestamp": 1705303740,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1146662462/",
    "is_pending": "Not Pending",
    "title": "Remove Element",
    "memory": "41.8 MB",
    "code": "class Solution {\n    public int removeElement(int[] nums, int val) {\n        int count=0;\n        int i=0;\n        int j=0;\n        int[] res=new int[nums.length];\n        for(int value:nums){\n            if(value!=val){\n                res[i]=value;\n                i++;\n            }\n        }\n        for(int flag:res){\n            nums[j]=flag;\n            j++;\n        }\n        return i;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "remove-element",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 181
  },
  {
    "id": 1146583163,
    "question_id": 88,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 7 months",
    "timestamp": 1705296993,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1146583163/",
    "is_pending": "Not Pending",
    "title": "Merge Sorted Array",
    "memory": "42.1 MB",
    "code": "class Solution {\n    public void merge(int[] nums1, int m, int[] nums2, int n) {\n        System.arraycopy(nums2,0,nums1,m,n);\n        Arrays.sort(nums1);\n        \n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111",
    "title_slug": "merge-sorted-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 180
  },
  {
    "id": 1140743388,
    "question_id": 792,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 7 months",
    "timestamp": 1704739066,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1140743388/",
    "is_pending": "Not Pending",
    "title": "Binary Search",
    "memory": "46.3 MB",
    "code": "import java.util.*;\nclass Solution {\n    public int search(int[] nums, int target) {\n        int low=0;\n        int high=nums.length-1;\n        while(low<=high){\n            int mid=(low+high)/2;\n            int mid_val=nums[mid];\n            if(mid_val==target){\n                return mid;\n            }\n            else if(mid_val<target){\n                low=mid+1;\n            }\n            else if(mid_val>target){\n                high=mid-1;\n            }\n        }\n        return -1;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111111111",
    "title_slug": "binary-search",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 179
  },
  {
    "id": 1093746096,
    "question_id": 1765,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 9 months",
    "timestamp": 1699375365,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/1093746096/",
    "is_pending": "Not Pending",
    "title": "Merge In Between Linked Lists",
    "memory": "46 MB",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {\n        ListNode temp=list1;\n        ListNode flag=list1;\n        ListNode stamp=list1;\n        for(int i=0;i<b;i++){\n            if(i==a-1){\n                flag=temp;\n            }\n            temp=temp.next;\n        }\n        stamp=temp.next;\n        flag.next=list2;\n        while(list2.next!=null){\n            list2=list2.next;\n        }\n        list2.next=stamp;\n        return list1;\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "merge-in-between-linked-lists",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 178
  },
  {
    "id": 1090083119,
    "question_id": 237,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 9 months",
    "timestamp": 1698950758,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1090083119/",
    "is_pending": "Not Pending",
    "title": "Delete Node in a Linked List",
    "memory": "42.6 MB",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public void deleteNode(ListNode node) {\n        node.val=node.next.val;\n        node.next=node.next.next;\n    }\n}",
    "compare_result": "11111111111111111111111111111111111111111",
    "title_slug": "delete-node-in-a-linked-list",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 177
  },
  {
    "id": 1090077381,
    "question_id": 2236,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 9 months",
    "timestamp": 1698950253,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "9 ms",
    "url": "/submissions/detail/1090077381/",
    "is_pending": "Not Pending",
    "title": "Maximum Twin Sum of a Linked List",
    "memory": "57.4 MB",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public int pairSum(ListNode head) {\n         List<Integer> l=new ArrayList<>();\n       int n=0;\n       while(head!=null){\n           l.add(head.val);\n           head=head.next;\n           n++;\n       }\n    int sum=0;\n    for(int i=0;i<n/2;i++){\n        int p=l.get(i)+l.get(n-1-i);\n        if(p>sum)\n        sum=p;\n    }\n    return sum;\n\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111",
    "title_slug": "maximum-twin-sum-of-a-linked-list",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 176
  },
  {
    "id": 1090077001,
    "question_id": 2236,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 9 months",
    "timestamp": 1698950221,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "10 ms",
    "url": "/submissions/detail/1090077001/",
    "is_pending": "Not Pending",
    "title": "Maximum Twin Sum of a Linked List",
    "memory": "57 MB",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public int pairSum(ListNode head) {\n         ArrayList<Integer> l=new ArrayList<>();\n       int n=0;\n       while(head!=null){\n           l.add(head.val);\n           head=head.next;\n           n++;\n       }\n    int sum=0;\n    for(int i=0;i<n/2;i++){\n        int p=l.get(i)+l.get(n-1-i);\n        if(p>sum)\n        sum=p;\n    }\n    return sum;\n\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111",
    "title_slug": "maximum-twin-sum-of-a-linked-list",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 175
  },
  {
    "id": 1087803658,
    "question_id": 2299,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 9 months",
    "timestamp": 1698692819,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "5 ms",
    "url": "/submissions/detail/1087803658/",
    "is_pending": "Not Pending",
    "title": "Merge Nodes in Between Zeros",
    "memory": "92.3 MB",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeNodes(ListNode head) {\n        ListNode res=new ListNode();\n        ListNode flag=res;\n        int sum=0;\n        head=head.next;\n        while(head!=null){\n            if(head.val==0){\n               ListNode temp=new ListNode(sum);\n               flag.next=temp;\n               flag=flag.next;\n               sum=0;\n           }\n            else{\n                sum+=head.val;\n            }\n             head=head.next;\n        }\n        return res.next;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111",
    "title_slug": "merge-nodes-in-between-zeros",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 174
  },
  {
    "id": 1087753395,
    "question_id": 2903,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 9 months",
    "timestamp": 1698688695,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/1087753395/",
    "is_pending": "Not Pending",
    "title": "Insert Greatest Common Divisors in Linked List",
    "memory": "43.5 MB",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n \nclass Solution {\n    public int findGcd(int a,int b){\n           while(a!=b){\n               if(a>b)\n               a-=b;\n               else\n               b=b-a;\n           } \n           return a;   \n            \n        }\n    public ListNode insertGreatestCommonDivisors(ListNode head) {\n        ListNode prevNode=null;\n        ListNode currentNode=head;\n      if(head.next==null){\n          return head;\n      }\n      while(currentNode.next!=null){\n          prevNode=currentNode;\n          currentNode=currentNode.next;\n          ListNode temp=new ListNode(findGcd(prevNode.val,currentNode.val));\n          temp.next=prevNode.next;\n          prevNode.next=temp;\n      }\n      return head;\n       \n    }\n}",
    "compare_result
    "title_slug": "insert-greatest-common-divisors-in-linked-list",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 173
  },
  {
    "id": 1086985054,
    "question_id": 206,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 9 months",
    "timestamp": 1698601591,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1086985054/",
    "is_pending": "Not Pending",
    "title": "Reverse Linked List",
    "memory": "40.9 MB",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        ListNode prevNode=null;\n        ListNode currentNode=head;\n        while(currentNode!=null){\n            ListNode nextNode=currentNode.next;\n           currentNode.next=prevNode;\n            prevNode=currentNode;\n            currentNode=nextNode;\n        }\n        return prevNode;\n    }\n}",
    "compare_result": "1111111111111111111111111111",
    "title_slug": "reverse-linked-list",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 171
  },
  {
    "id": 1085980288,
    "question_id": 908,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 9 months",
    "timestamp": 1698493468,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1085980288/",
    "is_pending": "Not Pending",
    "title": "Middle of the Linked List",
    "memory": "40.5 MB",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode middleNode(ListNode head) {\n        ListNode nodeList=head;\n        int count=0;\n        int count2=0;\n        int  n=0;\n        while(head.next!=null){\n            count++;\n            head=head.next;\n        }\n        if(count%2==0){\n            n=count/2;\n        }\n        else{\n            n=(count+1)/2;\n        }\n        while(count2<n){\n            nodeList=nodeList.next;\n            count2++;\n        }\n        return nodeList;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111",
    "title_slug": "middle-of-the-linked-list",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 170
  },
  {
    "id": 1085971496,
    "question_id": 1411,
    "lang": "java",
    "lang_name": "Java",
    "time": "1 year, 9 months",
    "timestamp": 1698492273,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/1085971496/",
    "is_pending": "Not Pending",
    "title": "Convert Binary Number in a Linked List to Integer",
    "memory": "40 MB",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public int getDecimalValue(ListNode head) {\n        int sum =0;\n        while(head!=null){\n            sum*=2;\n            sum+=head.val;\n            head=head.next;\n        }\n        return sum;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "convert-binary-number-in-a-linked-list-to-integer",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 169
  },
  {
    "id": 953371737,
    "question_id": 28,
    "lang": "java",
    "lang_name": "Java",
    "time": "2 years, 3 months",
    "timestamp": 1684504565,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/953371737/",
    "is_pending": "Not Pending",
    "title": "Find the Index of the First Occurrence in a String",
    "memory": "40.6 MB",
    "code": "class Solution {\n    public int strStr(String haystack, String needle) {\n        return haystack.indexOf(needle);\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "find-the-index-of-the-first-occurrence-in-a-string",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 160
  },
  {
    "id": 952786523,
    "question_id": 2471,
    "lang": "java",
    "lang_name": "Java",
    "time": "2 years, 3 months",
    "timestamp": 1684422747,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "28 ms",
    "url": "/submissions/detail/952786523/",
    "is_pending": "Not Pending",
    "title": "Minimum Amount of Time to Collect Garbage",
    "memory": "68.9 MB",
    "code": "class Solution {\n    public int garbageCollection(String[] garbage, int[] travel) {\n        \n        int len_garbage=garbage.length;\n        int len_travel=travel.length;\n        \n           \n            int index_p=0;\n            int index_g=0;\n            int index_m=0;\n            int p=0;\n            int g=0;\n            int m=0;\n    int sum=0;\n        \n        for(int i=len_garbage-1;i>=0;i--){\n            if(garbage[i].contains(\"P\") && p==0){\n                index_p=i;\n                p=1;\n\n            }\n            if(garbage[i].contains(\"G\") && g==0){\n                index_g=i;\n                g=1;\n            }\n            if(garbage[i].contains(\"M\") && m==0){\n                index_m=i;\n                m=1;\n            }\n        }\n        for(int i=0;i<len_garbage;i++){\n            sum+=garbage[i].length();\n        }\n\n\n        for(int i=0;i<index_p;i++){\n            sum+=travel[i];\n        }\n        for(int i=0;i<index_g;i++){\n            sum+=travel[i];\n        }\n        for(int i=0;i<index_m;i++){\n            sum+=travel[i];\n        }\n\n        return sum;\n      \n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "minimum-amount-of-time-to-collect-garbage",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 159
  },
  {
    "id": 952785866,
    "question_id": 2471,
    "lang": "java",
    "lang_name": "Java",
    "time": "2 years, 3 months",
    "timestamp": 1684422675,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "28 ms",
    "url": "/submissions/detail/952785866/",
    "is_pending": "Not Pending",
    "title": "Minimum Amount of Time to Collect Garbage",
    "memory": "68.6 MB",
    "code": "class Solution {\n    public int garbageCollection(String[] garbage, int[] travel) {\n        int minutes=0;\n        int len_garbage=garbage.length;\n        int len_travel=travel.length;\n        int count=0;\n        int int_p=1;\n            int int_g=1;\n            int int_m=1;\n            int index_p=0;\n            int index_g=0;\n            int index_m=0;\n            int p=0;\n            int g=0;\n            int m=0;\n    int sum=0;\n        // for(int i=0;i<len_garbage;i++){\n            \n        //     minutes+=garbage[i].length();\n        //     if(garbage[i].contains(\"P\") && int_p==1){\n        //     count++;\n        //     int_p++;\n        //     }\n        //      if(garbage[i].contains(\"G\") && int_g==1){\n        //     count++;\n        //     int_g++;\n        //      }\n        //      if(garbage[i].contains(\"M\") && int_m==1){\n        //     count++;\n        //     int_m++;\n        //      }\n        // }\n        for(int i=len_garbage-1;i>=0;i--){\n            if(garbage[i].contains(\"P\") && p==0){\n                index_p=i;\n                p=1;\n\n            }\n            if(garbage[i].contains(\"G\") && g==0){\n                index_g=i;\n                g=1;\n            }\n            if(garbage[i].contains(\"M\") && m==0){\n                index_m=i;\n                m=1;\n            }\n        }\n        for(int i=0;i<len_garbage;i++){\n            sum+=garbage[i].length();\n        }\n\n\n        for(int i=0;i<index_p;i++){\n            sum+=travel[i];\n        }\n        for(int i=0;i<index_g;i++){\n            sum+=travel[i];\n        }\n        for(int i=0;i<index_m;i++){\n            sum+=travel[i];\n        }\n\n        return sum;\n        // for(int i=0;i<len_travel;i++){\n        //     sum+=travel[i];\n        // }\n        // sum*=count;\n        // return minutes+sum;\n    }\n}",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "minimum-amount-of-time-to-collect-garbage",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 158
  },
  {
    "id": 952113924,
    "question_id": 11,
    "lang": "java",
    "lang_name": "Java",
    "time": "2 years, 3 months",
    "timestamp": 1684333652,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "5 ms",
    "url": "/submissions/detail/952113924/",
    "is_pending": "Not Pending",
    "title": "Container With Most Water",
    "memory": "52.9 MB",
    "code": "class Solution {\n    public int maxArea(int[] height) {\n        int left_index=0;\n        int right_index=height.length-1;\n        int max=0;\n        while(left_index<right_index){\n            int w = right_index - left_index;\n            int h = Math.min(height[left_index],height[right_index]);\n            int area = h*w;\n            max = Math.max(area,max);\n            if(height[right_index]>height[left_index]){\n                left_index++;\n            }\n            else if(height[left_index]>height[right_index]){\n                right_index--;\n            }\n            else{\n                left_index++;\n                right_index--;\n            }\n        }\n        return max;\n    }\n}",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "container-with-most-water",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 157
  },
  {
    "id": 917062943,
    "question_id": 2536,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 5 months",
    "timestamp": 1679082395,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "3 ms",
    "url": "/submissions/detail/917062943/",
    "is_pending": "Not Pending",
    "title": "Determine if Two Events Have Conflict",
    "memory": "11.3 MB",
    "code": "class Solution {\npublic:\n    bool haveConflict(vector<string>& e1, vector<string>& e2) {\n    /****    string start1=event1[0].substr(0,2);\n        int start_1=stoi(start1);\n        string end1=event1[1].substr(0,2);\n        int end_1=stoi(end1);\n        string start2=event2[0].substr(0,2);\n        int start_2=stoi(start2);\n        string end2=event2[1].substr(0,2);\n        int end_2=stoi(end2);\n        string start2_min=event2[0].substr(3,2);\n        int start_2_min=stoi(start2_min);\n        string end1_min=event1[1].substr(3,2);\n        int end_1_min=stoi(end1_min);\n        string start1_min=event1[0].substr(3,2);\n        int start_1_min=stoi(start1_min);\n        string end2_min=event2[1].substr(3,2);\n        int end_2_min=stoi(end2_min);\n        //string start1_min=event1[0].substr(3,2);\n        //int start_1_min=stoi(start1_min);\n        //string start2_min=event2[0].substr(3,2);\n        //int start_2_min=stoi(start2_min);\n        if(start_2>start_1){\n            if(end_1>start_2)\n                return true;\n            else if(start_2==end_1){\n                if(start_2_min<=end_1_min)\n                    return true;\n                else\n                    return false;\n            }\n            else\n                return false;\n        }\n        else if (start_1>start_2){\n            if(start_1<end_2)\n                return true;\n            else if(start_1==end_2){\n                if(start_1_min<=end_2_min)\n                    return true;\n                else\n                    return false;\n            }\n            else\n                return false;\n        }\n        else{\n                if(start_1_min<=start_2_min)\n                    return true;\n                else\n                    return false;\n        }\n        //return true;\n    ****/\n    return ((e1[0] <= e2[0]) && (e2[0] <= e1[1])) || ((e2[0] <= e1[0]) && (e1[0] <= e2[1]));    \n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "determine-if-two-events-have-conflict",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 156
  },
  {
    "id": 916473758,
    "question_id": 2551,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 5 months",
    "timestamp": 1678994615,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/916473758/",
    "is_pending": "Not Pending",
    "title": "Apply Operations to an Array",
    "memory": "9 MB",
    "code": "class Solution {\npublic:\n    vector<int> applyOperations(vector<int>& nums) {\n         int len=nums.size();\n        vector<int>res;\n        int count=0;\n        //fill(res.begin(),res.end(),0);\n       \n        for(int i=0;i<len-1;i++){\n            if(nums[i]==nums[i+1]){\n                nums[i]*=2;\n                nums[i+1]=0;\n            }\n        }\n        //int zeros=count(nums.begin(),nums.end(),0);\n        for(int i=0;i<len;i++){\n            if(nums[i]!=0)\n                res.push_back(nums[i]);\n            else count++;\n        }\n        while(count>0){\n            res.push_back(0);\n            count--;\n        }\n        //for(int i=len-zeros-1;i<len;i++){\n           // if(res[i]<=0)\n          //      res[i]=0;\n        //}\n        return res;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111",
    "title_slug": "apply-operations-to-an-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 149
  },
  {
    "id": 858713097,
    "question_id": 1797,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 8 months",
    "timestamp": 1670862074,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/858713097/",
    "is_pending": "Not Pending",
    "title": "Goal Parser Interpretation",
    "memory": "6.2 MB",
    "code": "class Solution {\npublic:\n    string interpret(string command) {\n        int len=command.length();\n        string s;\n        for(int i=0;i<len;i++){\n            if(command.at(i)=='('){\n                if(command.at(i+1)==')')\n                s+=\"o\";\n            else if(command.at(i+1)=='a'){\n            s+=\"al\";\n            i+=3;\n            }\n            continue;\n        }\n        else if(command.at(i)==')')\n        continue;\n        else\n        s+=command[i];\n    }\n    return s;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "goal-parser-interpretation",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 147
  },
  {
    "id": 858710777,
    "question_id": 1797,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 8 months",
    "timestamp": 1670861776,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/858710777/",
    "is_pending": "Not Pending",
    "title": "Goal Parser Interpretation",
    "memory": "6.2 MB",
    "code": "class Solution {\npublic:\n    string interpret(string command) {\n        int len=command.length();\n        string s;\n        for(int i=0;i<len;i++){\n            if(command.at(i)=='('){\n                if(command.at(i+1)==')')\n                s+=\"o\";\n            else if(command.at(i+1)=='a'){\n            s+=\"al\";\n            i+=3;\n            }\n            continue;\n        }\n        else if(command.at(i)==')')\n        continue;\n        else\n        s+=command[i];\n    }\n    return s;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "goal-parser-interpretation",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 146
  },
  {
    "id": 858170734,
    "question_id": 2219,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 8 months",
    "timestamp": 1670772279,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "15 ms",
    "url": "/submissions/detail/858170734/",
    "is_pending": "Not Pending",
    "title": "Maximum Number of Words Found in Sentences",
    "memory": "10.3 MB",
    "code": "class Solution {\npublic:\n    int mostWordsFound(vector<string>& sentences) {\n        int len=sentences.size();\n        int max=0;\n        for(int i=0;i<len;i++){\n            int count=0;\n            string s=sentences[i];\n            for(int j=0;j<s.length();j++){\n                if(s.at(j)==' ')\n                count++;\n            }\n            if(count>max)\n            max=count;\n        }\n        return max+1;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "maximum-number-of-words-found-in-sentences",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 145
  },
  {
    "id": 858170477,
    "question_id": 2219,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 8 months",
    "timestamp": 1670772240,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "40 ms",
    "url": "/submissions/detail/858170477/",
    "is_pending": "Not Pending",
    "title": "Maximum Number of Words Found in Sentences",
    "memory": "10.2 MB",
    "code": "class Solution {\npublic:\n    int mostWordsFound(vector<string>& sentences) {\n        int len=sentences.size();\n        int max=0;\n        for(int i=0;i<len;i++){\n            int count=1;\n            string s=sentences[i];\n            for(int j=0;j<s.length();j++){\n                if(s.at(j)==' ')\n                count++;\n            }\n            if(count>max)\n            max=count;\n        }\n        return max;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "maximum-number-of-words-found-in-sentences",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 144
  },
  {
    "id": 858168527,
    "question_id": 2219,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 8 months",
    "timestamp": 1670771936,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "13 ms",
    "url": "/submissions/detail/858168527/",
    "is_pending": "Not Pending",
    "title": "Maximum Number of Words Found in Sentences",
    "memory": "10.3 MB",
    "code": "class Solution {\npublic:\n    int mostWordsFound(vector<string>& sentences) {\n        int len=sentences.size();\n        int max=0;\n        for(int i=0;i<len;i++){\n            int count=0;\n            string s=sentences[i];\n            for(int j=0;j<s.length();j++){\n                if(s.at(j)==' ')\n                count++;\n            }\n            if(count>max)\n            max=count;\n        }\n        return max+1;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "maximum-number-of-words-found-in-sentences",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 142
  },
  {
    "id": 841281616,
    "question_id": 1737,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 9 months",
    "timestamp": 1668159210,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/841281616/",
    "is_pending": "Not Pending",
    "title": "Maximum Nesting Depth of the Parentheses",
    "memory": "6.5 MB",
    "code": "class Solution {\npublic:\n    int maxDepth(string s) {\n        stack<char> st;\n        int res=0,max=0;\n        for(int i=0;i<s.length();i++){\n            if(s.at(i)=='('){\n                res++;\n                if(res>=max)\n                    max=res;\n            }\n            if(s.at(i)==')'){\n                res--;\n            }\n        }\n        return max;\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "maximum-nesting-depth-of-the-parentheses",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 141
  },
  {
    "id": 840885727,
    "question_id": 9,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 9 months",
    "timestamp": 1668102969,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "35 ms",
    "url": "/submissions/detail/840885727/",
    "is_pending": "Not Pending",
    "title": "Palindrome Number",
    "memory": "5.9 MB",
    "code": "class Solution {\npublic:\n    bool isPalindrome(int x) {\n        string s=to_string(x);\n        int size=s.length();\n        if(size%2!=0){\n           for(int i=0;i<size/2;i++){\n            if(s[i]!=s[size-1-i])\n                return false;\n        }\n            return true;\n        }\n        else{\n            for(int i=0;i<=size/2-1;i++){\n                 if(s[i]!=s[size-1-i])\n                return false;\n            }\n            return true;\n        }\n    }\n};",
    "compare_result
    "title_slug": "palindrome-number",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 140
  },
  {
    "id": 816632307,
    "question_id": 2491,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 10 months",
    "timestamp": 1665075800,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/816632307/",
    "is_pending": "Not Pending",
    "title": "Smallest Even Multiple",
    "memory": "5.9 MB",
    "code": "class Solution {\npublic:\n    int smallestEvenMultiple(int n) {\n        if(n%2==0)\n            return n;\n        else\n            return n*2;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "smallest-even-multiple",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 139
  },
  {
    "id": 799035475,
    "question_id": 69,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 11 months",
    "timestamp": 1663095212,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "31 ms",
    "url": "/submissions/detail/799035475/",
    "is_pending": "Not Pending",
    "title": "Sqrt(x)",
    "memory": "5.9 MB",
    "code": "class Solution {\npublic:\n    int mySqrt(int x) {\n        /*if(x==0 || x==1)\n            return x;\n        else{\n            long long i=1;\n            while(i*i<=x){\n                i++;\n            }\n            return i-1;\n        }*/\n        long long i=1;\n            while(i*i<=x){\n                i++;\n            }\n            return i-1;\n    }\n};",
    "compare_result
    "title_slug": "sqrtx",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 137
  },
  {
    "id": 799034533,
    "question_id": 69,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 11 months",
    "timestamp": 1663095138,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "32 ms",
    "url": "/submissions/detail/799034533/",
    "is_pending": "Not Pending",
    "title": "Sqrt(x)",
    "memory": "5.8 MB",
    "code": "class Solution {\npublic:\n    int mySqrt(int x) {\n        if(x==0 || x==1)\n            return x;\n        else{\n            long long i=1;\n            while(i*i<=x){\n                i++;\n            }\n            return i-1;\n        }\n    }\n};",
    "compare_result
    "title_slug": "sqrtx",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 136
  },
  {
    "id": 797178403,
    "question_id": 2271,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 11 months",
    "timestamp": 1662907895,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "252 ms",
    "url": "/submissions/detail/797178403/",
    "is_pending": "Not Pending",
    "title": "Rearrange Array Elements by Sign",
    "memory": "140.5 MB",
    "code": "class Solution {\npublic:\n    vector<int> rearrangeArray(vector<int>& nums) {\n        vector<int>pos,neg,res;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]<0)\n                neg.push_back(nums[i]);\n            else\n                pos.push_back(nums[i]);\n        }\n        for(int i=0;i<nums.size();i++){\n            if(i==0 || i%2==0)\n                res.push_back(pos[i/2]);\n            else\n                res.push_back(neg[i/2]);\n        }\n        return res;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "rearrange-array-elements-by-sign",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 134
  },
  {
    "id": 796523271,
    "question_id": 1580,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 11 months",
    "timestamp": 1662837712,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "12 ms",
    "url": "/submissions/detail/796523271/",
    "is_pending": "Not Pending",
    "title": "Shuffle the Array",
    "memory": "9.8 MB",
    "code": "class Solution {\npublic:\n    vector<int> shuffle(vector<int>& nums, int n) {\n        vector<int>res;\n        int temp=0;\n        for(int i=0;i<n;i++){\n               res.push_back(nums[i]);\n                res.push_back(nums[i+n]);\n        }\n        return res;\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111",
    "title_slug": "shuffle-the-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 133
  },
  {
    "id": 796511823,
    "question_id": 1791,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 11 months",
    "timestamp": 1662836634,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/796511823/",
    "is_pending": "Not Pending",
    "title": "Richest Customer Wealth",
    "memory": "7.8 MB",
    "code": "class Solution {\npublic:\n    int maximumWealth(vector<vector<int>>& accounts) {\n        int res=0;\n        for(int i=0;i<accounts.size();i++){\n            int temp=0;\n            for(int j=0;j<accounts[i].size();j++){\n             temp+=accounts[i][j];   \n            }  \n            if(temp>res){\n                res=temp;\n            }\n        }\n        return res;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111",
    "title_slug": "richest-customer-wealth",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 132
  },
  {
    "id": 796506659,
    "question_id": 2137,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 11 months",
    "timestamp": 1662836170,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "27 ms",
    "url": "/submissions/detail/796506659/",
    "is_pending": "Not Pending",
    "title": "Final Value of Variable After Performing Operations",
    "memory": "14.1 MB",
    "code": "class Solution {\npublic:\n    int finalValueAfterOperations(vector<string>& operations) {\n        int res=0;\n        for(int i=0;i<operations.size();i++){\n            for(int j=0;j<3;j++){\n                if(operations[i][j]=='-'){\n                    res--;\n                    break;\n                }\n                else  if(operations[i][j]=='+'){\n                    res++;\n                    break;\n                }\n            }\n        }\n        return res;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "final-value-of-variable-after-performing-operations",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 131
  },
  {
    "id": 796501011,
    "question_id": 2383,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 11 months",
    "timestamp": 1662835670,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/796501011/",
    "is_pending": "Not Pending",
    "title": "Add Two Integers",
    "memory": "6 MB",
    "code": "class Solution {\npublic:\n    int sum(int num1, int num2) {\n        return num1+num2;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "add-two-integers",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 129
  },
  {
    "id": 796499404,
    "question_id": 2058,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 11 months",
    "timestamp": 1662835527,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "18 ms",
    "url": "/submissions/detail/796499404/",
    "is_pending": "Not Pending",
    "title": "Concatenation of Array",
    "memory": "13.1 MB",
    "code": "class Solution {\npublic:\n    vector<int> getConcatenation(vector<int>& nums) {\n        vector<int>res;\n        int n=nums.size(),j=0;\n        for(int i=0;i<2*n;i++){\n            if(i>=n){             \n                res.push_back(nums[j]);\n                j++;\n        }\n            else\n                res.push_back(nums[i]);\n        }\n        return res;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "concatenation-of-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 128
  },
  {
    "id": 794954602,
    "question_id": 1939,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 11 months",
    "timestamp": 1662662151,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "443 ms",
    "url": "/submissions/detail/794954602/",
    "is_pending": "Not Pending",
    "title": "Queries on Number of Points Inside a Circle",
    "memory": "16.3 MB",
    "code": "class Solution {\npublic:\n    vector<int> countPoints(vector<vector<int>>& points, vector<vector<int>>& queries) {\n        vector<int>res;\n        for(int i=0;i<queries.size();i++){\n            int count=0;\n           for(int j=0;j<points.size();j++){\n               if(((queries[i][0]-points[j][0])*(queries[i][0]-points[j][0])+(queries[i][1]-points[j][1])*(queries[i][1]-points[j][1]))<=queries[i][2]*queries[i][2]){\n                   count++;\n               }\n           }\n            res.push_back(count);\n        }\n        return res;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "queries-on-number-of-points-inside-a-circle",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 127
  },
  {
    "id": 794919647,
    "question_id": 1807,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 11 months",
    "timestamp": 1662659419,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "71 ms",
    "url": "/submissions/detail/794919647/",
    "is_pending": "Not Pending",
    "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
    "memory": "13.5 MB",
    "code": "class Solution {\npublic:\n    int minPartitions(string n) {\n        int res=0;\n       for(int i=0;i<n.length();i++){\n            int temp=n[i]-'0';\n            if(temp>res)\n                res=temp;\n        }\n        return res;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "partitioning-into-minimum-number-of-deci-binary-numbers",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 126
  },
  {
    "id": 786139684,
    "question_id": 412,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "2 years, 11 months",
    "timestamp": 1661761245,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "3 ms",
    "url": "/submissions/detail/786139684/",
    "is_pending": "Not Pending",
    "title": "Fizz Buzz",
    "memory": "8 MB",
    "code": "class Solution {\npublic:\n    vector<string> fizzBuzz(int n) {\n        vector<string>res;\n        int x=1;\n        while(x<=n){\n            if(x%3==0 && x%5==0){\n                res.push_back(\"FizzBuzz\");\n            }\n            else if(x%3==0){\n                res.push_back(\"Fizz\");\n            }\n            else if(x%5==0){\n                res.push_back(\"Buzz\");\n            }\n            else{\n                res.push_back(to_string(x));\n            }\n            x++;\n        }\n        return res;\n    }\n};",
    "compare_result": "11111111",
    "title_slug": "fizz-buzz",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 125
  },
  {
    "id": 767644128,
    "question_id": 1,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years",
    "timestamp": 1659884567,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1794 ms",
    "url": "/submissions/detail/767644128/",
    "is_pending": "Not Pending",
    "title": "Two Sum",
    "memory": "10.3 MB",
    "code": "class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        vector<int>res;\n        int temp=0;\n        for(int i=0;i<nums.size();i++){\n            int sum=nums[i];\n            for(int j=0;j<nums.size();j++){\n                sum+=nums[j];\n                if(sum==target && i!=j){\n                    res.push_back(i);\n                    res.push_back(j);\n                    temp=1;\n                    break;\n                }\n                sum-=nums[j];\n            }\n            if(temp==1)\n                    break;\n        }\n        return res;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111",
    "title_slug": "two-sum",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 124
  },
  {
    "id": 721400609,
    "question_id": 503,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 2 months",
    "timestamp": 1655141024,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "692 ms",
    "url": "/submissions/detail/721400609/",
    "is_pending": "Not Pending",
    "title": "Next Greater Element II",
    "memory": "24.3 MB",
    "code": "class Solution {\npublic:\n   vector<int> nextGreaterElements(vector<int>& nums) {\n        //stack<int> st;\n        vector<int> output;\n        int N=nums.size();\n        int max=*max_element(nums.begin(),nums.end());\n        for(int j=0;j<N;j++)\n        {\n            if(nums[j]==max){\n            output.push_back(-1);\n            continue;}\n        for(int i=j;(i+1)%N!=j;i++)\n        {\n         if(nums[(i+1)%N]>nums[j])\n          {\n            output.push_back(nums[(i+1)%N]);\n            break;\n          }\n        }\n        }\n        return output;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "next-greater-element-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 113
  },
  {
    "id": 721399545,
    "question_id": 119,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 2 months",
    "timestamp": 1655140937,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/721399545/",
    "is_pending": "Not Pending",
    "title": "Pascal's Triangle II",
    "memory": "6.5 MB",
    "code": "class Solution {\npublic:\n    vector<int> getRow(int rowIndex) {\n        vector<int>res(rowIndex+1,0);\n        res[0]=1;\n        for(int i=1;i<rowIndex+1;i++){\n            for(int j=i;j>=1;j--){\n                res[j]+=res[j-1];\n            }\n        }\n        return res;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111",
    "title_slug": "pascals-triangle-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 112
  },
  {
    "id": 720629727,
    "question_id": 20,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 2 months",
    "timestamp": 1655056940,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/720629727/",
    "is_pending": "Not Pending",
    "title": "Valid Parentheses",
    "memory": "6.4 MB",
    "code": "class Solution {\npublic:\n    bool isValid(string s) {\n       stack<char>st;\n      for(int i=0;i<s.size();i++){\n          if(st.empty())\n              st.push(s[i]);\n          else if(s[i]=='(' or s[i]=='[' or s[i]=='{')\n              st.push(s[i]);\n          else if(s[i]==')' and st.top()=='(')\n              st.pop();\n          else if(s[i]=='}' and st.top()=='{')\n              st.pop();\n          else if(s[i]==']' and st.top()=='[')\n              st.pop();\n          else \n              st.push(s[i]);\n      }\n        if(st.empty())\n            return true;\n        else \n            return false;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "valid-parentheses",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 111
  },
  {
    "id": 720627960,
    "question_id": 119,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 2 months",
    "timestamp": 1655056780,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "3 ms",
    "url": "/submissions/detail/720627960/",
    "is_pending": "Not Pending",
    "title": "Pascal's Triangle II",
    "memory": "6.4 MB",
    "code": "class Solution {\npublic:\n    vector<int> getRow(int rowIndex) {\n        vector<int>res(rowIndex+1,0);\n        res[0]=1;\n        for(int i=1;i<rowIndex+1;i++){\n            for(int j=i;j>=1;j--){\n                res[j]+=res[j-1];\n            }\n        }\n        return res;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111",
    "title_slug": "pascals-triangle-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 110
  },
  {
    "id": 718853882,
    "question_id": 2243,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 2 months",
    "timestamp": 1654862060,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/718853882/",
    "is_pending": "Not Pending",
    "title": "Check if All A's Appears Before All B's",
    "memory": "6 MB",
    "code": "class Solution {\npublic:\n    bool checkString(string s) {\n        /*int n=s.length();\n        if(n>1){\n            size_t x=s.find('a');\n            int n=s.find_last_of('a');\n            size_t y=s.find('b');\n            if(x!=string::npos && y!=string::npos){\n                 if( n>y)\n            return false;\n                }                \n            }\n         return true;*/\n        string s1=\"ba\";\n        size_t n = s.find(s1);\n        if(n!=string::npos)\n            return false;\n        else return true;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "check-if-all-as-appears-before-all-bs",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 108
  },
  {
    "id": 718851447,
    "question_id": 2243,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 2 months",
    "timestamp": 1654861739,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "2 ms",
    "url": "/submissions/detail/718851447/",
    "is_pending": "Not Pending",
    "title": "Check if All A's Appears Before All B's",
    "memory": "6.2 MB",
    "code": "class Solution {\npublic:\n    bool checkString(string s) {\n        int n=s.length();\n        if(n>1){\n            size_t x=s.find('a');\n            int n=s.find_last_of('a');\n            size_t y=s.find('b');\n            if(x!=string::npos && y!=string::npos){\n                 if( n>y)\n            return false;\n\n}\n                \n        }\n         return true;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "check-if-all-as-appears-before-all-bs",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 107
  },
  {
    "id": 718848504,
    "question_id": 2243,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 2 months",
    "timestamp": 1654861357,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "5 ms",
    "url": "/submissions/detail/718848504/",
    "is_pending": "Not Pending",
    "title": "Check if All A's Appears Before All B's",
    "memory": "6 MB",
    "code": "class Solution {\npublic:\n    bool checkString(string s) {\n        /*int temp=0;\n        \n        for(int i=0;i<n;i++){\n            if(s[i]=='b')\n                temp=i;\n        }*/\n        int n=s.length();\n        if(n>1){\n        //int x=s.find_last_of('a');\n            size_t x=s.find('a');\n            int n=s.find_last_of('a');\n            size_t y=s.find('b');\n        //int y=s.find_first_of('b');\n            if(x!=string::npos && y!=string::npos){\n                 if( n>y)\n            return false;\n        else return true; \n}\n            else \n                return true;\n        \n        }\n        else return true;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "check-if-all-as-appears-before-all-bs",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 104
  },
  {
    "id": 718834322,
    "question_id": 1878,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 2 months",
    "timestamp": 1654859486,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/718834322/",
    "is_pending": "Not Pending",
    "title": "Check if Array Is Sorted and Rotated",
    "memory": "8.4 MB",
    "code": "class Solution {\npublic:\n    bool check(vector<int>& nums) {\n      int temp=0;\n        int n=nums.size();\n        for(int i=0;i<=n-2;i++){\n            if(nums[i]>nums[i+1])\n                temp++;\n        }\n        if(temp==0)\n            return true;\n        else if(temp==1){\n            if(nums[n-1]<=nums[0]){\n                return true;\n            }\n            else return false;\n        } \n           else \n               return false;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "check-if-array-is-sorted-and-rotated",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 101
  },
  {
    "id": 718091526,
    "question_id": 119,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 2 months",
    "timestamp": 1654778011,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "8 ms",
    "url": "/submissions/detail/718091526/",
    "is_pending": "Not Pending",
    "title": "Pascal's Triangle II",
    "memory": "6.4 MB",
    "code": "class Solution {\npublic:\n    vector<int> getRow(int rowIndex) {\n        vector<int>res(rowIndex+1,0);\n        res[0]=1;\n        for(int i=1;i<rowIndex+1;i++){\n            for(int j=i;j>=1;j--){\n                res[j]+=res[j-1];\n            }\n        }\n        return res;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111",
    "title_slug": "pascals-triangle-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 95
  },
  {
    "id": 717158840,
    "question_id": 118,
    "lang": "java",
    "lang_name": "Java",
    "time": "3 years, 2 months",
    "timestamp": 1654674410,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "1 ms",
    "url": "/submissions/detail/717158840/",
    "is_pending": "Not Pending",
    "title": "Pascal's Triangle",
    "memory": "41.6 MB",
    "code": "class Solution {\n    public List<List<Integer>> generate(int numRows) {\n        List<List<Integer>> flag=new ArrayList<List<Integer>>();\n        List<Integer> temp,pre=null;\n        for(int i=0;i<numRows;i++){\n            temp=new ArrayList<Integer>();\n            for(int j=0;j<=i;j++){\n                if(j==0 || j==i)\n                    temp.add(1);\n                else\n                    temp.add(pre.get(j-1)+pre.get(j));   \n                }\n        pre=temp;\n        flag.add(temp);\n        }\n       return flag;\n    }      \n}",
    "compare_result": "11111111111111",
    "title_slug": "pascals-triangle",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 88
  },
  {
    "id": 716481828,
    "question_id": 73,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 2 months",
    "timestamp": 1654601973,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "62 ms",
    "url": "/submissions/detail/716481828/",
    "is_pending": "Not Pending",
    "title": "Set Matrix Zeroes",
    "memory": "13.3 MB",
    "code": "class Solution {\npublic:\n    void setZeroes(vector<vector<int>>& matrix) {\n        int m=matrix.size();\n        int n=matrix[0].size();\n        vector<int> col(m,-1);\n        vector<int> row(n,-1);\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(matrix[i][j]==0){\n                    col[i]=0;\n                    row[j]=0;\n                }\n            }\n        }\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(col[i]==0 || row[j]==0){\n                    matrix[i][j]=0;\n                }\n                cout<<matrix[i][j];\n            }\n            cout<<endl;\n        }\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "set-matrix-zeroes",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 87
  },
  {
    "id": 578077174,
    "question_id": 75,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 9 months",
    "timestamp": 1635349833,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/578077174/",
    "is_pending": "Not Pending",
    "title": "Sort Colors",
    "memory": "8.2 MB",
    "code": "class Solution {\npublic:\n    void sortColors(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        for(int i=0;i<nums.size();i++)\n            cout<<nums[i];\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "sort-colors",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 85
  },
  {
    "id": 577982993,
    "question_id": 217,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "3 years, 9 months",
    "timestamp": 1635331695,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "20 ms",
    "url": "/submissions/detail/577982993/",
    "is_pending": "Not Pending",
    "title": "Contains Duplicate",
    "memory": "15.4 MB",
    "code": "class Solution {\npublic:\n    bool containsDuplicate(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        /*vector<int>hash(nums[nums.size()-1],0);\n        for(int i=0;i<nums.size();i++)\n        {\n            hash[nums[i]]++;\n            if(hash[nums[i]]>1)\n                return true;\n        }\n        return false;*/\n        for(int i=0;i<nums.size()-1;i++){\n            if(nums[i]==nums[i+1])\n                return true;\n        }\n        return false;\n    }\n    \n};",
    "compare_result": "11111111111111111111",
    "title_slug": "contains-duplicate",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 84
  },
  {
    "id": 513105840,
    "question_id": 1013,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 1 month",
    "timestamp": 1624643794,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "16 ms",
    "url": "/submissions/detail/513105840/",
    "is_pending": "Not Pending",
    "title": "Fibonacci Number",
    "memory": "5.9 MB",
    "code": "class Solution {\npublic:\n    \n    int fib(int n) {\n        if(n==0) return 0;\n        if(n==1) return 1;\n       int ans= fib(n-1) + fib(n-2);\n       return ans;\n    }\n};",
    "compare_result": "1111111111111111111111111111111",
    "title_slug": "fibonacci-number",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 79
  },
  {
    "id": 513094630,
    "question_id": 344,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 1 month",
    "timestamp": 1624641970,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "392 ms",
    "url": "/submissions/detail/513094630/",
    "is_pending": "Not Pending",
    "title": "Reverse String",
    "memory": "34.5 MB",
    "code": "class Solution {\npublic:\n    void reverseString(vector<char>& s) {\n        if(s.size()==1)\n        {\n            return;\n        }\n       char temp=s[0];\n       s.erase(s.begin());\n       reverseString(s);\n       s.push_back(temp);\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "reverse-string",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 78
  },
  {
    "id": 502538334,
    "question_id": 1045,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1622743178,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "8 ms",
    "url": "/submissions/detail/502538334/",
    "is_pending": "Not Pending",
    "title": "Check If Word Is Valid After Substitutions",
    "memory": "8.3 MB",
    "code": "class Solution {\npublic:\n    bool isValid(string s) {\n        vector<char>v;\n        for(int i=0;i<s.size();i++){\n            if(s[i]=='a' or s[i]=='b'){\n                v.push_back(s[i]);\n            }\n            else{\n                if(v.size()>=2 and v[v.size()-1]=='b' and v[v.size()-2]=='a'){\n                    v.pop_back();\n                    v.pop_back();\n                }\n                else\n                    return false;\n            }\n        }\n        return v.empty();\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "check-if-word-is-valid-after-substitutions",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 76
  },
  {
    "id": 502512573,
    "question_id": 1320,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1622739851,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "48 ms",
    "url": "/submissions/detail/502512573/",
    "is_pending": "Not Pending",
    "title": "Remove All Adjacent Duplicates in String II",
    "memory": "14.1 MB",
    "code": "class Solution {\npublic:\n    string removeDuplicates(string s, int k) {\n        stack<pair<char, int> > st;\n        string str;\n        for(int i=0;i<s.size();i++)\n        {\n            if(!st.empty() and st.top().first==s[i])\n                st.push({s[i],st.top().second+1});\n            else\n                st.push({s[i],1});\n            if(st.top().second==k)\n            { \n                int p=k;\n                while(p--)\n                st.pop();\n            }\n        }\n        \n         while(!st.empty())\n         {\n            str.push_back(st.top().first);\n            st.pop();\n         }\n          reverse(str.begin(),str.end());\n          return str;\n    }\n};",
    "compare_result": "11111111111111111111",
    "title_slug": "remove-all-adjacent-duplicates-in-string-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 75
  },
  {
    "id": 501981321,
    "question_id": 503,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1622653624,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "348 ms",
    "url": "/submissions/detail/501981321/",
    "is_pending": "Not Pending",
    "title": "Next Greater Element II",
    "memory": "24.4 MB",
    "code": "class Solution {\npublic:\n   vector<int> nextGreaterElements(vector<int>& nums) {\n        //stack<int> st;\n        vector<int> output;\n        int N=nums.size();\n        int max=*max_element(nums.begin(),nums.end());\n        for(int j=0;j<N;j++)\n        {\n            if(nums[j]==max){\n            output.push_back(-1);\n            continue;}\n        for(int i=j;(i+1)%N!=j;i++)\n        {\n         if(nums[(i+1)%N]>nums[j])\n          {\n            output.push_back(nums[(i+1)%N]);\n            break;\n          }\n        }\n        }\n        return output;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "next-greater-element-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 72
  },
  {
    "id": 501867997,
    "question_id": 1205,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1622637246,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/501867997/",
    "is_pending": "Not Pending",
    "title": "Defanging an IP Address",
    "memory": "6 MB",
    "code": "class Solution {\npublic:\n    string defangIPaddr(string address) {\n        string str;\n        for(int i=0;i<address.size();i++){\n            if(address[i]=='.'){\n                str.push_back('[');\n                str.push_back('.');\n                str.push_back(']');\n            }\n            else \n                str.push_back(address[i]);\n        }\n         return str;                      \n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "defanging-an-ip-address",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 67
  },
  {
    "id": 500306715,
    "question_id": 350,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1622366947,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "8 ms",
    "url": "/submissions/detail/500306715/",
    "is_pending": "Not Pending",
    "title": "Intersection of Two Arrays II",
    "memory": "10.8 MB",
    "code": "class Solution {\npublic:\n    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {\n          map<int,int>m;\n        vector<int>v;\n        if(nums1.size()>=nums2.size()){\n        for(int i=0;i<nums1.size();i++){\n            m[nums1[i]]++;\n        }\n        for(int i=0;i<nums2.size();i++){\n            if(m[nums2[i]]>0){\n                //if(find(v.begin(),v.end(),nums2[i])==v.end())\n                v.push_back(nums2[i]);\n            }\n            m[nums2[i]]--;\n        }\n        }\n        else{\n            for(int i=0;i<nums2.size();i++){\n            m[nums2[i]]++;\n        }\n        for(int i=0;i<nums1.size();i++){\n            if(m[nums1[i]]>0){\n                v.push_back(nums1[i]);\n            }\n             m[nums1[i]]--;\n        }\n        }\n        return v;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111",
    "title_slug": "intersection-of-two-arrays-ii",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 62
  },
  {
    "id": 500303123,
    "question_id": 349,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1622366252,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/500303123/",
    "is_pending": "Not Pending",
    "title": "Intersection of Two Arrays",
    "memory": "10.6 MB",
    "code": "class Solution {\npublic:\n    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {\n   map<int,int>m;\n        vector<int>v;\n        for(int i=0;i<nums1.size();i++){\n            m[nums1[i]]++;\n        }\n        for(int i=0;i<nums2.size();i++){\n            if(m[nums2[i]]>0){\n                if(find(v.begin(),v.end(),nums2[i])==v.end())\n                v.push_back(nums2[i]);\n            }\n        }\n        return v;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111",
    "title_slug": "intersection-of-two-arrays",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 58
  },
  {
    "id": 499874128,
    "question_id": 35,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1622298011,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/499874128/",
    "is_pending": "Not Pending",
    "title": "Search Insert Position",
    "memory": "9.7 MB",
    "code": "class Solution {\npublic:\n    int searchInsert(vector<int>& a, int target) {\n        int low=0,high=a.size()-1,mid,ans=0;\n        while(low<=high)\n        {\n            mid=low+(high-low)/2;\n           /* if(a[mid]<target)\n            {  \n             return mid;\n            }\n            */\n            if(a[mid]<target)\n            {\n                ans=mid+1;\n                low=mid+1;\n            }\n            else\n                high=mid-1;\n        }\n        return ans;\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "search-insert-position",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 57
  },
  {
    "id": 499863807,
    "question_id": 882,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1622296288,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "12 ms",
    "url": "/submissions/detail/499863807/",
    "is_pending": "Not Pending",
    "title": "Peak Index in a Mountain Array",
    "memory": "11.6 MB",
    "code": "class Solution {\npublic:\n    int peakIndexInMountainArray(vector<int>& a) {\n        int low=0,ans,n=a.size();\n        int  high=a.size()-1,mid;\n        while(low<=high)\n        {\n            mid=low+(high-low)/2;\n            if((mid>0 and mid<a.size()-1) and a[mid]>a[mid-1] and a[mid]>a[mid+1])\n            { \n                ans=mid;\n                return mid;\n                break;\n            }\n            else if(a[mid]>a[(mid+n-1)%n] and a[mid]<a[(mid+1)%n])\n                low=mid+1;\n            else if(a[mid]<a[(mid+n-1)%n] and a[mid]>a[(mid+1)%n])\n                high=mid-1;\n        }\n        return ans;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111",
    "title_slug": "peak-index-in-a-mountain-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 56
  },
  {
    "id": 498555437,
    "question_id": 1497,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1622037831,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "32 ms",
    "url": "/submissions/detail/498555437/",
    "is_pending": "Not Pending",
    "title": "Design a Stack With Increment Operation",
    "memory": "21 MB",
    "code": "class CustomStack {\npublic:\n    vector<int>v;\n    int n;\n    CustomStack(int maxSize) {\n        n=maxSize;\n    }\n    \n    void push(int x) {\n        if(v.size()==n)\n            return;\n        v.push_back(x);\n    }\n    \n    int pop() {\n        if(v.empty())\n            return -1;\n        int p=v[v.size()-1];\n        v.pop_back();\n        return p;\n    }\n    \n    void increment(int k, int val) {\n        int t;\n        if(v.size()>=k)\n             t=k;\n        else \n            t=v.size();\n        for(int i=0;i<t;i++){\n            v[i]+=val;\n        }\n    }\n};\n\n/**\n * Your CustomStack object will be instantiated and called as such:\n * CustomStack* obj = new CustomStack(maxSize);\n * obj->push(x);\n * int param_2 = obj->pop();\n * obj->increment(k,val);\n */",
    "compare_result": "1111111111111111111111111111111111",
    "title_slug": "design-a-stack-with-increment-operation",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 55
  },
  {
    "id": 498170711,
    "question_id": 1078,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1621965160,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/498170711/",
    "is_pending": "Not Pending",
    "title": "Remove Outermost Parentheses",
    "memory": "6.6 MB",
    "code": "class Solution {\npublic:\n    string removeOuterParentheses(string s) {\n        stack<char> st;\n        string ans=\"\";\n        for(int i=0;i<s.size();i++)\n        {\n            if(s[i]=='(')\n            {\n                st.push(s[i]);\n                if(st.size()==1)\n                s[i]='#';\n            }\n            else\n            {\n                if(st.size()==1)\n                s[i]='#';\n                st.pop();\n            }\n              if(s[i]!='#')\n              ans.push_back(s[i]);\n        }\n        return ans;\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111",
    "title_slug": "remove-outermost-parentheses",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 54
  },
  {
    "id": 497712278,
    "question_id": 728,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1621881052,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/497712278/",
    "is_pending": "Not Pending",
    "title": "Self Dividing Numbers",
    "memory": "6.4 MB",
    "code": "class Solution {\n\npublic:\n\n    vector<int> selfDividingNumbers(int left, int right) {\n\n        int rem=0,flag=0;\n\n        vector<int> vec;\n\n        for(int i=left;i<=right;i++)\n\n        {\n\n            int num=i;\n\n            flag=0;\n\n            while(num>0)\n\n            {\n\n               rem=num%10;\n\n               num=num/10;\n\n               if(rem==0 or i%rem!=0)\n\n                {\n\n                    flag=0;\n\n                    break;\n\n                }\n\n                else\n\n                    flag=1;\n\n            }\n\n            if(flag==1)\n\n            vec.push_back(i);\n\n        }\n\n        return vec;\n\n    }\n\n};\n        \n\n",
    "compare_result": "1111111111111111111111111111111",
    "title_slug": "self-dividing-numbers",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 52
  },
  {
    "id": 497702955,
    "question_id": 1603,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 2 months",
    "timestamp": 1621879703,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/497702955/",
    "is_pending": "Not Pending",
    "title": "Running Sum of 1d Array",
    "memory": "8.6 MB",
    "code": "class Solution {\npublic:\n    vector<int> runningSum(vector<int>& nums) {\n        vector<int>v;\n        int sum=0;\n        for(int i=0;i<nums.size();i++){\n            sum+=nums[i];\n            v.push_back(sum);\n        }\n        return v;\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111",
    "title_slug": "running-sum-of-1d-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 51
  },
  {
    "id": 497110287,
    "question_id": 1371,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621769386,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "44 ms",
    "url": "/submissions/detail/497110287/",
    "is_pending": "Not Pending",
    "title": "Minimum Remove to Make Valid Parentheses",
    "memory": "11.8 MB",
    "code": "class Solution {\npublic:\n    string minRemoveToMakeValid(string s) {\n       stack<pair<char,int>> st; \n       for(int i=0;i<s.size();i++)\n       {\n          if(s[i]=='(')\n               st.push(make_pair(s[i],i));\n           else if((st.empty() or st.top().first==')') and s[i]==')')\n               st.push(make_pair(s[i],i));\n           else if(!st.empty() and s[i]==')' and st.top().first=='(')\n               st.pop();   \n       }\n        while(!st.empty())\n        {\n            int k=st.top().second;\n           // cout<<st.top().first<<\" \"<<st.top().second<<endl;\n            s.erase(s.begin()+k);\n                st.pop();\n        }\n        return s;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "minimum-remove-to-make-valid-parentheses",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 50
  },
  {
    "id": 496999656,
    "question_id": 983,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621748777,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "8 ms",
    "url": "/submissions/detail/496999656/",
    "is_pending": "Not Pending",
    "title": "Validate Stack Sequences",
    "memory": "15.2 MB",
    "code": "class Solution {\npublic:\n     bool validateStackSequences(vector<int>& pushed, vector<int>& popped) {\n        auto indic=pushed.begin();\n        for(int i=0;i<popped.size();i++)\n        {\n            if(popped[i]!=*indic)\n            {\n            indic=find(indic+1,pushed.end(),popped[i]);\n            if(indic==pushed.end())\n            return false;\n            }\n           // cout<<*indic<<\"  \";\n            if(popped[i]==*indic)\n            {\n                pushed.erase(indic);\n                indic--;\n                if(indic<pushed.begin())\n                    indic=pushed.begin();\n            }\n            \n        }\n        return true;\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "validate-stack-sequences",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 48
  },
  {
    "id": 496619278,
    "question_id": 739,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621683567,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "72 ms",
    "url": "/submissions/detail/496619278/",
    "is_pending": "Not Pending",
    "title": "Daily Temperatures",
    "memory": "41.6 MB",
    "code": "class Solution {\npublic:\n    vector<int> dailyTemperatures(vector<int>& temperatures) {\n        stack<pair<int,int>>s;\n        vector<int>output;\n        int currnt,next;\n        for(int i=temperatures.size()-1;i>=0;i--){\n            if(s.empty())\n                output.push_back(0);\n            else {\n                if(temperatures[i]<s.top().first)\n                    output.push_back(s.top().second-i);\n                else if(temperatures[i]>=s.top().first){\n                    while(s.size()!=0 and temperatures[i]>=s.top().first){\n                        s.pop();\n                    }\n                    if(s.empty())\n                        output.push_back(0);\n                    else if(temperatures[i]<s.top().first)\n                        output.push_back(s.top().second-i);\n                }\n            }\n             s.push({temperatures[i],i});\n        }\n         reverse(output.begin(),output.end());\n        return output;\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111",
    "title_slug": "daily-temperatures",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 46
  },
  {
    "id": 496604589,
    "question_id": 957,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621680357,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/496604589/",
    "is_pending": "Not Pending",
    "title": "Minimum Add to Make Parentheses Valid",
    "memory": "6.1 MB",
    "code": "class Solution {\npublic:\n    int minAddToMakeValid(string s) {\n         stack<char> st;\n        for(int i=0;i<s.size();i++)\n        {\n            if(st.empty()==0 and ((s[i]==')' and st.top()=='(') or (s[i]=='}' and st.top()=='{') or (s[i]==']' and st.top()=='[')))\n            {\n                st.pop();\n            }\n            else\n                st.push(s[i]);\n        }\n       return st.size();\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "minimum-add-to-make-parentheses-valid",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 45
  },
  {
    "id": 496554838,
    "question_id": 20,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621669502,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/496554838/",
    "is_pending": "Not Pending",
    "title": "Valid Parentheses",
    "memory": "6.3 MB",
    "code": "class Solution {\npublic:\n    bool isValid(string s) {\n       stack<char>st;\n      for(int i=0;i<s.size();i++){\n          if(st.empty())\n              st.push(s[i]);\n          else if(s[i]=='(' or s[i]=='[' or s[i]=='{')\n              st.push(s[i]);\n          else if(s[i]==')' and st.top()=='(')\n              st.pop();\n          else if(s[i]=='}' and st.top()=='{')\n              st.pop();\n          else if(s[i]==']' and st.top()=='[')\n              st.pop();\n          else \n              st.push(s[i]);\n      }\n        if(st.empty())\n            return true;\n        else \n            return false;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "valid-parentheses",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 42
  },
  {
    "id": 496340253,
    "question_id": 874,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621619884,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/496340253/",
    "is_pending": "Not Pending",
    "title": "Backspace String Compare",
    "memory": "6.3 MB",
    "code": "class Solution {\npublic:\n    bool backspaceCompare(string s, string t) {\n        int flag=0;\n       stack<char>s1,s2;\n        for(int i=0;i<s.size();i++){\n            if(s[i]=='#' and !s1.empty())\n                s1.pop();\n            else if(s[i]!='#')\n            s1.push(s[i]);\n        }\n        for(int i=0;i<t.size();i++){\n            if(t[i]=='#' and !s2.empty())\n                s2.pop();\n            else if(t[i]!='#')\n            s2.push(t[i]);\n        }\n        int y=s1.size();\n         if(s1.size()==s2.size() and s1.size()==0)\n             flag=1;\n         else if(s1.size()==s2.size()){\n            for(int i=0;i<y;i++){\n                if(s1.top()==s2.top()){\n                    s1.pop();\n                    s2.pop();\n                    flag=1;\n                }\n                else if(s1.top()!=s2.top())\n                { flag=0;\n                 break;}\n            }\n        }\n        if(flag==1)\n            return true;\n        else \n            return false;\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "backspace-string-compare",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 34
  },
  {
    "id": 496323664,
    "question_id": 1666,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621617202,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/496323664/",
    "is_pending": "Not Pending",
    "title": "Make The String Great",
    "memory": "6.2 MB",
    "code": "class Solution {\npublic:\n    string makeGood(string s) {\n        string str;\n        for(int i=0;i<s.size();i++){\n            if(str.empty())\n                str.push_back(s[i]);\n            else if(abs(str.back()-s[i])==32){\n                    str.pop_back();\n                }\n            else {\n                str.push_back(s[i]);\n            }\n        }\n        return str;\n        \n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "make-the-string-great",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 31
  },
  {
    "id": 496310131,
    "question_id": 496,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621614868,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/496310131/",
    "is_pending": "Not Pending",
    "title": "Next Greater Element I",
    "memory": "8.6 MB",
    "code": "class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n        stack<int>s;\n        vector<int>v;\n        vector<int>result;\n        for(int i=nums2.size()- 1;i>=0;i--){\n            if(s.empty()){\n                v.push_back(-1);\n                s.push(nums2[i]);\n            }\n            else if(s.top()>nums2[i]){\n                v.push_back(s.top());\n                s.push(nums2[i]);\n            }\n            else \n            { \n                    while(!s.empty() and s.top()<=nums2[i]){\n                    s.pop();\n                    }\n                if(s.empty()){\n                    v.push_back(-1);\n                    s.push(nums2[i]);\n                }\n                else if(s.top()>nums2[i]){\n                    v.push_back(s.top());\n                    s.push(nums2[i]);\n                }\n                }\n        }\n        reverse(v.begin(),v.end());\n        for(int i=0;i<nums1.size();i++)\n        {\n            int pos=find(nums2.begin(),nums2.end(),nums1[i])-nums2.begin();\n            result.push_back(v[pos]);       \n        }\n        return result;\n       }\n};",
    "compare_result": "111111111111111",
    "title_slug": "next-greater-element-i",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 30
  },
  {
    "id": 495437368,
    "question_id": 1001,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621446912,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "32 ms",
    "url": "/submissions/detail/495437368/",
    "is_pending": "Not Pending",
    "title": "N-Repeated Element in Size 2N Array",
    "memory": "24.8 MB",
    "code": "class Solution {\npublic:\n    int repeatedNTimes(vector<int>& nums) {\n       int n=nums.size()/2;\n        int h[10005]={0};\n       // map<int,int> map1;\n        for(int i=0;i<nums.size();i++)\n        {\n\t\t\th[nums[i]]++;\t\t\n        }\n       int pos=find(h,h+10005,n)-h;\n        return pos;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "n-repeated-element-in-size-2n-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 29
  },
  {
    "id": 495437175,
    "question_id": 1001,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621446882,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "36 ms",
    "url": "/submissions/detail/495437175/",
    "is_pending": "Not Pending",
    "title": "N-Repeated Element in Size 2N Array",
    "memory": "24.6 MB",
    "code": "class Solution {\npublic:\n    int repeatedNTimes(vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int x;\n        for(int i=0;i<nums.size();i++){\n            if(nums[i]==nums[i+1])\n            {x=nums[i];\n             break;}\n        }\n        return x;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "n-repeated-element-in-size-2n-array",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 28
  },
  {
    "id": 495431040,
    "question_id": 1482,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621445942,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "8 ms",
    "url": "/submissions/detail/495431040/",
    "is_pending": "Not Pending",
    "title": "How Many Numbers Are Smaller Than the Current Number",
    "memory": "10.6 MB",
    "code": "class Solution {\npublic:\n    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {\n        vector<int> vec2=nums;\n        sort(vec2.begin(),vec2.end());\n        map<int,int> map1;\n        for(int i=0;i<vec2.size();i++)\n        {\n           if(map1.find(vec2[i])==map1.end())\n\t\t\t\tmap1[vec2[i]]=i;\n        }\n        vec2.clear();\n         for(int i=0;i<nums.size();i++)\n        {\n           vec2.push_back(map1[nums[i]]);\n        }\n        return vec2;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "how-many-numbers-are-smaller-than-the-current-number",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 27
  },
  {
    "id": 495424739,
    "question_id": 1482,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621444971,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "44 ms",
    "url": "/submissions/detail/495424739/",
    "is_pending": "Not Pending",
    "title": "How Many Numbers Are Smaller Than the Current Number",
    "memory": "10 MB",
    "code": "class Solution {\npublic:\n    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {\n        int x=nums.size();\n        vector<int>v;\n        //int h[500]={0};\n        for(int i=0;i<x;i++){\n            int count=0;\n            for(int j=0;j<x;j++){\n                if(nums[i]>nums[j]){\n                 count++;   \n                }\n                }\n            v.push_back(count);\n        }\n        /*for(int i=0;i<x;i++){\n            v.push_back(h[i]);\n        }*/\n        return v;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "how-many-numbers-are-smaller-than-the-current-number",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 26
  },
  {
    "id": 495423647,
    "question_id": 1482,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621444800,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "44 ms",
    "url": "/submissions/detail/495423647/",
    "is_pending": "Not Pending",
    "title": "How Many Numbers Are Smaller Than the Current Number",
    "memory": "10.2 MB",
    "code": "class Solution {\npublic:\n    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {\n        int x=nums.size();\n        vector<int>v;\n        int h[500]={0};\n        for(int i=0;i<x;i++){\n            int count=0;\n            for(int j=0;j<x;j++){\n                if(nums[i]>nums[j]){\n                 count++;   \n                }\n                }\n            v.push_back(count);\n        }\n        /*for(int i=0;i<x;i++){\n            v.push_back(h[i]);\n        }*/\n        return v;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "how-many-numbers-are-smaller-than-the-current-number",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 25
  },
  {
    "id": 495327286,
    "question_id": 782,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621428253,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/495327286/",
    "is_pending": "Not Pending",
    "title": "Jewels and Stones",
    "memory": "6.1 MB",
    "code": "class Solution {\npublic:\n    int numJewelsInStones(string jewels, string stones) {\n        int h[125]={0},count=0;\n      for(int i=0;i<jewels .size();i++){\n         \n              h[jewels[i]]++;\n          \n        }\n        for(int i=0;i<stones.size();i++){\n           if(h[stones[i]]>=1)\n               count++;\n        }\n        return count;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "jewels-and-stones",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 22
  },
  {
    "id": 495311208,
    "question_id": 1635,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621424813,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/495311208/",
    "is_pending": "Not Pending",
    "title": "Number of Good Pairs",
    "memory": "7.2 MB",
    "code": "class Solution {\npublic:\n    int numIdenticalPairs(vector<int>& nums) {\n       int h[101]={0};\n        long count=0;\n       for(int i=0;i<nums.size();i++){\n           h[nums[i]]++;\n       } \n        int size = sizeof(h)/sizeof(h[0]);\n        for(int i=0;i<100;i++){\n            if(h[i]>1){\n                count+=(h[i]*(h[i]+1)/2)-h[i];\n            }\n        }\n        return count;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111",
    "title_slug": "number-of-good-pairs",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 19
  },
  {
    "id": 495308328,
    "question_id": 1635,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621424137,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/495308328/",
    "is_pending": "Not Pending",
    "title": "Number of Good Pairs",
    "memory": "7.3 MB",
    "code": "class Solution {\npublic:\n    int numIdenticalPairs(vector<int>& nums) {\n       int h[110]={0};\n        long count=0;\n       for(int i=0;i<nums.size();i++){\n           h[nums[i]]++;\n       } \n        int size = sizeof(h)/sizeof(h[0]);\n        for(int i=0;i<=100;i++){\n            if(h[i]>1){\n                count+=(h[i]*(h[i]+1)/2)-h[i];\n            }\n        }\n        return count;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111",
    "title_slug": "number-of-good-pairs",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 17
  },
  {
    "id": 495307252,
    "question_id": 1635,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1621423880,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/495307252/",
    "is_pending": "Not Pending",
    "title": "Number of Good Pairs",
    "memory": "7.3 MB",
    "code": "class Solution {\npublic:\n    int numIdenticalPairs(vector<int>& nums) {\n        \n       int h[110]={1};\n        long count=0;\n       for(int i=0;i<nums.size();i++){\n           h[nums[i]]++;\n       } \n        int size = sizeof(h)/sizeof(h[0]);\n        for(int i=1;i<=100;i++){\n            if(h[i]>1){\n                count+=(h[i]*(h[i]+1)/2)-h[i];\n            }\n        }\n        return count;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111",
    "title_slug": "number-of-good-pairs",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 14
  },
  {
    "id": 490909540,
    "question_id": 1720,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1620575999,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "8 ms",
    "url": "/submissions/detail/490909540/",
    "is_pending": "Not Pending",
    "title": "Crawler Log Folder",
    "memory": "10.3 MB",
    "code": "class Solution {\npublic:\n    int minOperations(vector<string>& logs) {\n         int count=0;\n        for(int i=0;i<logs.size();i++)\n        {\n            if(logs[i]==\"../\" and count!=0)\n                count--;\n            else if(logs[i]==\"../\" and count==0)\n            {}\n            else if(logs[i]==\"./\")\n            {}\n            else\n                count++;\n        }\n        return count;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "crawler-log-folder",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 9
  },
  {
    "id": 490889135,
    "question_id": 682,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1620572456,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "0 ms",
    "url": "/submissions/detail/490889135/",
    "is_pending": "Not Pending",
    "title": "Baseball Game",
    "memory": "8.4 MB",
    "code": "class Solution {\npublic:\n    int calPoints(vector<string>& ops) {\n        stack<int>rec;\n        for(int i=0;i<ops.size();i++)\n        {\n            if(ops[i]==\"C\")\n            {\n                rec.pop();\n            }\n            else if(ops[i]==\"D\")\n            {\n                rec.push(2*rec.top());\n            }\n            else if(ops[i]==\"+\")\n            {\n                int temp1=rec.top();\n                rec.pop();\n                int temp2=rec.top();\n            \n                rec.push(temp1);\n                rec.push(temp1+temp2);\n            }\n            else\n            {\n                rec.push(stoi(ops[i]));\n            }\n        }\n        int sum=0;\n        while(rec.size()>0)\n        {\n            sum+=rec.top();\n            rec.pop();\n        }\n        return(sum);\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111",
    "title_slug": "baseball-game",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 8
  },
  {
    "id": 490872615,
    "question_id": 1552,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1620569376,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "4 ms",
    "url": "/submissions/detail/490872615/",
    "is_pending": "Not Pending",
    "title": "Build an Array With Stack Operations",
    "memory": "7.8 MB",
    "code": "class Solution {\npublic:\n    vector<string> buildArray(vector<int>& target, int n) {\n        \n        vector<string> str;\n        int i=1;\n        for(int j=0;j<target.size();j++)\n        {\n            while(target[j]>i)\n            {\n                str.push_back(\"Push\");\n                str.push_back(\"Pop\");\n                i++;\n            }\n            str.push_back(\"Push\");\n            i++;\n        }\n        return str;\n    }\n};",
    "compare_result": "1111111111111111111111111111111111111111111111111",
    "title_slug": "build-an-array-with-stack-operations",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 7
  },
  {
    "id": 490129573,
    "question_id": 1128,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1620413266,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "12 ms",
    "url": "/submissions/detail/490129573/",
    "is_pending": "Not Pending",
    "title": "Remove All Adjacent Duplicates In String",
    "memory": "10.2 MB",
    "code": "class Solution {\npublic:\n    string removeDuplicates(string S) {\n        stack<char> s;\n        string str;\n        //str.push_back(S[0]);\n        //s.push(S[0]);\n        for(int i=0;i<S.size();i++)\n        {\n            if(str.size()==0 ) //S[i]!=str[str.size()-1])\n            str.push_back(S[i]);\n           // if(S[i]==s.top())\n            else if(S[i]==str[str.size()-1])\n                //str.pop();\n                str.pop_back(); \n            else \n                str.push_back(S[i]);\n        }\n        return str;\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "remove-all-adjacent-duplicates-in-string",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 6
  },
  {
    "id": 490113461,
    "question_id": 1961,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1620410246,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "156 ms",
    "url": "/submissions/detail/490113461/",
    "is_pending": "Not Pending",
    "title": "Maximum Ice Cream Bars",
    "memory": "76.6 MB",
    "code": "class Solution {\npublic:\n    int maxIceCream(vector<int>& costs, int coins) {\n        sort(costs.begin(),costs.end());\n        int sum=0,ice=0;\n        for(auto it=costs.begin();it<costs.end();it++)\n        {\n            if(sum+(*it)<=coins)\n            {\n                ice++;\n                sum+=(*it);\n            }\n        }\n        return ice;\n    }\n};",
    "compare_result": "111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "maximum-ice-cream-bars",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 5
  },
  {
    "id": 490084387,
    "question_id": 1895,
    "lang": "cpp",
    "lang_name": "C++",
    "time": "4 years, 3 months",
    "timestamp": 1620404633,
    "status": 10,
    "status_display": "Accepted",
    "runtime": "132 ms",
    "url": "/submissions/detail/490084387/",
    "is_pending": "Not Pending",
    "title": "Minimum Number of Operations to Move All Balls to Each Box",
    "memory": "9.1 MB",
    "code": "class Solution {\npublic:\n    vector<int> minOperations(string boxes) {\n        int n=boxes.size();\n        vector<int>v;\n        for(int i=0;i<n;i++)\n        {\n            int count=0;\n            for(int j=0;j<n;j++)\n            {\n                if(boxes[j]=='1')\n                    count+=abs(j-i);\n            }\n            v.push_back(count);\n        }\n        return v;\n    }\n};",
    "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    "title_slug": "minimum-number-of-operations-to-move-all-balls-to-each-box",
    "has_notes": false,
    "flag_type": 1,
    "frontend_id": 1
  }
]